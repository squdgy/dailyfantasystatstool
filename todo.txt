NEXT:
========

fix local storage save/restore of lineup
fix weather display
keep an eye on nickname mappings;

draftstreet?!

MLB:
==========
l/r/s filter
fix hidden columns for mlb, ex. hr, 1b etc.
set teamid in dfsgameplayerstats for MLB
generate projections!
lineups for doubleheaders? 5/28/2012 - need to change filter to search on double headers (server side change :-()
also for doubleheaders: the gameid for odds changes for a double header so for odds/dbl header, get gameid mapping to work
- every once in a while run this to update nicknames: select * from mlbplayer where playerId = 0 and activeSW = 'A';
- add pitchers info to game view
- need venue information: city, roofType, direction, then add wind direction
- show venue and show better indication of wind speed etc.
- problem with game ids of double headers in stats?
- aggregate stats for top grid: games played, avg mins over last n, avg pts over last n
- area for game info:
- fix active flag on player - when they are in a starting lineup, probably means they just came off of the DL. This is not the query, but it's a start
- "perfect game" stat and calculation for use in draftday scoring

SITE WORK:
==========
Create a full site: work on umbraco site?
google analytics
Mobile!

NBA:
=========
game detail? - stadiums, etc.
generate projections

NHL:
==========
game details - stadiums
add starting goalie to game view

NFL:
==========
how to set DFST.AppSettings.date
add to dfsrosterpositionmap for all sites
game details - stadiums
more on projections: scrape more? or edit myself
move to generic projections table and key off of playerid/gameid (not week)

Roster Generation
==========
change code to use new salary table to get per/game

State:
========
save current state of filters - by sport
state: set on page size (filter bar) via pagesizepicker
state: add to player stats grid
state: fix on game details

ExtJS Controllers:
==================
Move all 'controlling' logic into controller over time
* drag/drop: should move handlers into controller

Misc.
==========
siteDetails store should only need to filter by gameId & not site id  
- Hadoop?
fix delete problem in azure: loops through every file even though it was not just copied, to find a source file to delete (after copy), take much longer than necessary
whenupdated table: increase tableName column/change column name : minor re-architect!
more code cleanup - Fix SportPlayer return in WEBAPI use a datacontract resolver; don't assume NBA; fix generics 
some view models still in the data layer, move to view layer
theme
Add glossary
new scrapers: - fan throwdown, draftstreet, star street?
add venue information to game data
Figure out build process for Ext JS 4 - slow now!!
Add who's hot option; do some daily computation and put in db
should put a help bar icon on the toolbar in the filters with a popup to explain the section
need to check out project to new area -to make sure I can do everything I need to
more logging
upgrade generate schema script to capture pks and not null attributes!!!
why doesn't sitedetailsstore make ajax call when filtered()?
dealing with positions and mappings is still less than ideal
Write a detailed document with information on all projects, deployments, accounts etc.
disable draftaid.com/twitter until ready
delete wordpress site (where is it)?
weather: schedule to retrieve it a little more often
- players that might need nickname mappings:

another performance check on the webapi (rosterpositions takes too long to load)

Major Schema related:
=======
Change to support double headers
add support for multiple projection sets

UI:
==========
simplify - Reduce the #of things showing to new user (columns), hide most extra stuff
Possible ui improvements for roster position eligibility: show comma separated values in UI
much better icons for probable/likely/injured
- new UI: plan for MLB season
sencha cmd to combine/minify?
all game definitions pre-loaded 1x, instead of ajax calls for each change?
add time of update for starting lineup
add column with position played in bottom grid?
need glossary or tooltips for column headers
need player filters - use generic grid filters?
Change theme colors
Clean up header for bottom grid - full team name, full position name, other?
need reset filters button
need filter summary (or summaries?)
need to clear or set all games
need to be able to choose individual teams, not just games
uncheck games that have already occurred in the day on page load, and make not chooseable?
better way to configure bottom grid columns to be longer

ExtJS:
===========
consider upgrade to 5?
check for fixes for extjs checkbox bug - STILL not fixed as of 4.2.1
Clean up theme
On stores, encodeFilters, encodeSorters are all copy-paste: Either create a common proxy for them to all use or fix the server side to accept the default sort and filter format generated by EXTJS (latter is preferable?)

WEBAPI:
===========
revisit all cached repos for code changes/cleanup - fix to not cache as a chunk?
schedule repository should have miss functionality and just load schedules for next week+
(Bill) Add Trace Logging and Save trace logs and iis logs to azure storage
Go through TODO comments in code

Loader/Data - generic:
===========
remove dependence on si data
move to python? gasp!
when local game id provided by site (fd/dd/dk) use an idmapping to get actual game id, could be important for double headers!!
deal with future days' contests and/or 2-day contests?
move quartz working code back into the WEBAPI solution and into a worker role
transactions!
Can replace Config::Tiny with something that normally ships with strawberry perl?
move nickname stuff to db!!
stop at collecting 1 feed file - just be smart and try to get the latest before copying - makes import take a long time to go through multiple
move some more generic stuff from bulkdataimporter to baseimporter, remove dependency of lineup importer on bulkdataimporter
save_to_db is unwieldy - clean it up?
- Nullable sportId in view, get not null to stick when updating edmx 

Loader/Data - baseball
===========
change data sources (not dk)
add backup to lineups script to look for other games from another site?
Clean up logging - don't exit on errors, just log and continue, use a logging api?
change load_teamrosters to ignore players that are already ok?
fantasyfeud might be easy to load data for: http://www.fantasyfeud.com/#draftkit.salaries
add flag to all scripts to prepare it for a reload of data, ex. when importing fanduel scores delete the pricing data
for fanduel for the current day from both the fanduel table and the dfspricing table.
whenupdated table: add column for sport

Perl/Azure (rdp password is P3rlUser):
============
- should change to worker role?
- new trace provider or new web.config version, so don't have to comment out azure diagnostics trace provider when running locally?
(Bill) Add blob lease checking - when running from >1 instance, ensure only one instance runs
Fix cron trigger to compute UTC time, instead of hard-coding or switch to diff. trigger type
Move quartz jobs into the WEBAPI project?
(Bill) Figure out the best way to send the errors from the load scripts to me (email?) - note: currently running perl/azure scripts not checked in
Write file with db connection?
calling cpan.bat - any options that will make this faster, like skipping tests?
keep jobs (script lists and schedules) in a db table?
fix bad references when updating edmx file - runningperlinazure project

Maintenance:
===========
check db backups
back up schema and domain data and commit to git
consolidate azure accounts, know which account stuff is under
add copyrights to all files
combine webapi and load projects into one github repo?
query to Find problems in mappings: select daId, srcName, count(*) from idmapping where tableName = 'player' group by daId, srcName having count(*) > 1;
to find player that need nickname mappings:
    select * from player p
    inner join fanduel f on (f.namelast = p.namelast)
    where  f.playerId = 0 and f.sportId = 1 and p.teamId >=255
    and positionId not in (21, 22, 23, 24, 25, 27, 28, 29, 32, 33)
    order by p.position desc;

OR (4/2014)
    select distinct
	f.namefirst as stFirst, f.namelast as stLast, f.nickname as stNick,
	p.nameFirst, p.nameLast, p.position,
	f.position as stPos, f.teamId as stTeamId, f.localId,
	p.playerId, p.birthdate, t.city, t.name
	from player p
	inner join team t on (p.teamId = t.teamId)
    inner join fanduel f on (f.namelast = p.namelast and f.sportId = t.sportId)
	left join fanduel f2 on (f2.playerId = p.playerId)
    where  f.playerId = 0 and f.sportId = 2 and f2.playerId is null
    order by p.position desc;
