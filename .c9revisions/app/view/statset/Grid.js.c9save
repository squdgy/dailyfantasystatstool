{"ts":1338896653488,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Ext.define('DFST.view.statset.Grid', {\n    extend: 'Ext.grid.Panel',\n\talias: 'widget.statsetgrid',\n\n\tcls: 'statset-grid',\n\tdisabled: false,\n\n    requires: ['Ext.toolbar.Toolbar'],\n    \n    border: false,    \n    \n    dockedItems: [{\n        xtype: 'pagingtoolbar',\n        dock: 'bottom',\n\t    store: 'Stats',\n        displayInfo: true\n    }],\n    \n\tinitComponent: function() {\n\t\tExt.apply(this, {\n\t\t    store: 'Stats',\n\n\t\t\tcolumns: {\n                defaults: {\n                    align: 'right',\n                    style: 'text-align:center',\n                    width: 40\n                },\n                items: [{\n                    text: 'Name',\n                    dataIndex: 'name',\n                    align: 'left',\n                    width: 150,\n                    renderer: this.formatName\n                },{\n                    text: 'Team',\n                    dataIndex: 'team',\n                    align: 'left',\n                    width: 60,\n                    renderer: this.formatTeam\n                },{\n                    text: 'OPP',\n                    dataIndex: 'opp',\n                    align: 'left',\n                    width: 60,\n                    renderer: this.formatOpponent\n                },{\n                    text: 'Pos',\n                    dataIndex: 'spos',\n                    align: 'left'\n                },{\n                    text: 'B-Order',\n                    dataIndex: 'border',\n                    renderer: this.formatBattingOrder\n                },{\n                    text: 'G',\n                    dataIndex: 'ng'\n                },{\n                    text: '1B',\n                    dataIndex: 'x1b',\n                    hidden: true\n                },{\n                    text: '2B',\n                    dataIndex: 'x2b',\n                    hidden: true\n                },{\n                    text: '3B',\n                    dataIndex: 'x3b',\n                    hidden: true\n                },{\n                    text: 'HR',\n                    dataIndex: 'hr',\n                    hidden: true\n                },{\n                    text: 'R',\n                    dataIndex: 'r',\n                    hidden: true\n                },{\n                    text: 'RBI',\n                    dataIndex: 'rbi',\n                    hidden: true\n                },{\n                    text: 'BB',\n                    dataIndex: 'bb',\n                    hidden: true\n                },{\n                    text: 'SB',\n                    dataIndex: 'sb',\n                    hidden: true\n                },{\n                    text: 'HBP',\n                    dataIndex: 'hbp',\n                    hidden: true\n                },{\n                    text: 'OUT',\n                    dataIndex: 'o',\n                    hidden: true\n               },{\n                    text: 'W',\n                    dataIndex: 'w',\n                    hidden: true\n                },{\n                    text: 'W/G',\n                    dataIndex: 'aw',\n                    hidden: true,\n                    renderer: Ext.util.Format.numberRenderer('0.00')\n                },{\n                    text: 'ER',\n                    dataIndex: 'er',\n                    hidden: true\n                },{\n                    text: 'ER/G',\n                    dataIndex: 'aer',\n                    hidden: true,\n                    renderer: Ext.util.Format.numberRenderer('0.00')\n                },{\n                    text: 'SO',\n                    dataIndex: 'so',\n                    hidden: true\n                },{\n                    text: 'SO/G',\n                    dataIndex: 'aso',\n                    hidden: true,\n                    renderer: Ext.util.Format.numberRenderer('0.00')                \n                },{\n                    text: 'IP',\n                    dataIndex: 'ip',\n                    hidden: true\n                },{\n                    text: 'IP/G',\n                    dataIndex: 'aip',\n                    hidden: true\n                },{\n                    text: 'Avg Pts',\n                    dataIndex: 'afp',\n                    width: 60,\n                    renderer: Ext.util.Format.numberRenderer('0.00')\n                },{\n                    text: '$',\n                    dataIndex: 'sal',\n                    width: 75,\n                    renderer: this.moneyRenderer\n                },{\n                    text: '$/Pt',\n                    dataIndex: 'cpp',\n                    width: 75,\n                    renderer: this.costPerPointRenderer\n                }\n                ]\n\t\t\t}\n\t\t});\n\n\t\tthis.callParent(arguments);\n\t},\n\n    formatBattingOrder: function(value, p, record) {\n        if (value === 0) {\n            return \"\";\n        } else if (value === 10) { //pitcher\n            return \"N/A\";\n        } else {\n            return value;\n        }\n    },\n    \n    moneyRenderer: function(value, p, record) {\n        return Ext.util.Format.currency(value, '$', -1); \n    },\n    \n    /**\n     * Cost Per Point renderer\n     * @private\n     */\n    costPerPointRenderer: function(value, p, record) {\n        if (value === 999999) {\n            return \"&infin;\";\n        } else {\n            return this.moneyRenderer(value, p, record);\n        }\n    },\n    \n    /**\n     * Name renderer\n     * @private\n     */\n\tformatName: function(value, p, record) {\n        var isInjured = record.data.inj;\n        var isProbable = record.data.pp;\n        value = '<a href=\"http://mlb.mlb.com/team/player.jsp?player_id=' + \n            record.get('id') + '\" title=\"Click to view on MLB.com\" target=\"mlb\">' + value + '</a>';\n        if (isInjured) {\n            return value + '<img src=\"images/16px-Injury_icon_2.svg.png\" class=\"icon-indicator\"/>';\n        } else if (isProbable) {\n            return value + '<img src=\"images/starting_pitcher.png\" class=\"icon-indicator\"/>';\n        } else {\n            return value;\n        }\n\t},\n    \n\t/**\n     * Team renderer\n     * @private\n     */\n\tformatTeam: function(value, p, record) {\n        var isHome = record.data.isHome;\n        return (isHome ? '@' + value : value).toUpperCase();\n\t},\n    \n    /**\n     * Opponent renderer\n     * @private\n     */\n\tformatOpponent: function(value, p, record) {\n        var isHome = record.data.isHome;\n        return (isHome ? record.data.opp : '@' + record.data.opp).toUpperCase();\n\t}\n    \n});\n\n"]],"start1":0,"start2":0,"length1":0,"length2":6386}]],"length":6386}
{"contributors":[],"silentsave":false,"ts":1359296884660,"patch":[[{"diffs":[[0,") {\n"],[-1,"\t\tExt.apply(this, {\n\t"],[1,"        var mlbGridConfig = {\n    "],[0,"\t   "]],"start1":374,"start2":374,"length1":29,"length2":42},{"diffs":[[0,"            },{\n"],[1,"                    text: 'MR',\n                    dataIndex: 'mr1',\n                    hidden: true\n                },{\n"],[0,"                "]],"start1":1515,"start2":1515,"length1":32,"length2":155},{"diffs":[[0,"\t\t\t}\n\t\t}"],[1,"; \n\t\tExt.apply(this, bGridConfig"],[0,");\n\n\t\tth"]],"start1":4734,"start2":4734,"length1":16,"length2":48}]],"length":6554,"saved":false}
{"ts":1359296902298,"patch":[[{"diffs":[[0,"y(this, "],[1,"ml"],[0,"bGridCon"]],"start1":4755,"start2":4755,"length1":16,"length2":18}]],"length":6556,"saved":false}
{"ts":1359296939444,"patch":[[{"diffs":[[0,"    var "],[-1,"mlbG"],[1,"gridConfig = {};\n        g"],[0,"ridConfi"]],"start1":382,"start2":382,"length1":20,"length2":42},{"diffs":[[0,"  gridConfig"],[1,"[\"mlb\"]"],[0," = {\n    \t  "]],"start1":413,"start2":413,"length1":24,"length2":31}]],"length":6585,"saved":false}
{"ts":1359297049980,"patch":[[{"diffs":[[0,"}\n\t\t}; \n"],[1,"        gridConfig[\"nba\"] = {\n            store: 'Stats',\n\n\t\t\tcolumns: {\n                defaults: {\n                    align: 'right',\n                    style: 'text-align:center',\n                    width: 40\n                },\n                items: [{\n                    text: 'Name',\n                    dataIndex: 'name',\n                    align: 'left',\n                    width: 150,\n                    renderer: this.formatName\n                },{\n                    text: 'Team',\n                    dataIndex: 'team',\n                    align: 'left',\n                    width: 60,\n                    renderer: this.formatTeam\n                },{\n                    text: 'OPP',\n                    dataIndex: 'opp',\n                    align: 'left',\n                    width: 60,\n                    renderer: this.formatOpponent\n                },{\n                    text: 'Pos',\n                    dataIndex: 'spos',\n                    align: 'left'\n                },{\n                    text: 'G',\n                    dataIndex: 'ng'\n                },{\n                    text: 'Avg Pts',\n                    dataIndex: 'afp',\n                    width: 60,\n                    renderer: Ext.util.Format.numberRenderer('0.00')\n                },{\n                    text: '$',\n                    dataIndex: 'sal',\n                    width: 75,\n                    renderer: this.moneyRenderer\n                },{\n                    text: '$/Pt',\n                    dataIndex: 'cpp',\n                    width: 75,\n                    renderer: this.costPerPointRenderer\n                }\n                ]\n\t\t\t}\n\t\t}; \n"],[0,"\t\tExt.ap"]],"start1":4766,"start2":4766,"length1":16,"length2":1677},{"diffs":[[0,"is, "],[-1,"mlbG"],[1,"g"],[0,"ridC"]],"start1":6449,"start2":6449,"length1":12,"length2":9},{"diffs":[[0,"idConfig"],[1,"[DFST.AppSettings.sport]"],[0,");\n\n\t\tth"]],"start1":6455,"start2":6455,"length1":16,"length2":40}]],"length":8267,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359826588983,"patch":[[{"diffs":[[0,"ata.pp;\n"],[1,"        if (DFST.AppSettings.sport == \"mlb\")\n        {\n    "],[0,"        "]],"start1":7328,"start2":7328,"length1":16,"length2":75},{"diffs":[[0,"id=' + \n"],[1,"    "],[0,"        "]],"start1":7463,"start2":7463,"length1":16,"length2":20},{"diffs":[[0,"e + '</a>';\n"],[1,"        }\n"],[0,"        if ("]],"start1":7563,"start2":7563,"length1":24,"length2":34}]],"length":8340,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360508640066,"patch":[[{"diffs":[[0,"   hidden: true\n"],[1,"                /*\n"],[0,"                "]],"start1":1647,"start2":1647,"length1":32,"length2":51},{"diffs":[[0,"dataIndex: 'ng'\n"],[1,"                */\n"],[0,"                "]],"start1":1753,"start2":1753,"length1":32,"length2":51}]],"length":8378,"saved":false}
{"ts":1360508644566,"patch":[[{"diffs":[[0,"      /*"],[1," TODO"],[0,"\n       "]],"start1":1673,"start2":1673,"length1":16,"length2":21}]],"length":8383,"saved":false}
