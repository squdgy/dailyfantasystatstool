{"ts":1338846257928,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Ext.define('DFST.controller.Filters', {\n    extend: 'Ext.app.Controller',\n\n    stores: ['Stats', 'PlayerStats', 'SiteDetails', 'Games'],\n    models: ['StatSet'],\n    views: ['filter.List'],\n    \n    refs: [\n        {ref: 'dateFilter', selector: 'filterlist datefield'},\n        {ref: 'probablesFilter', selector: 'filterlist checkbox#probables'},\n        {ref: 'injuredFilter', selector: 'filterlist checkbox#injured'},\n        {ref: 'positionFilters', selector: 'filterlist fieldcontainer#positions'},\n        {ref: 'salRangeFilter', selector: 'filterlist multislider#salRange'},\n        {ref: 'cppRangeFilter', selector: 'filterlist multislider#cppRange'},\n        {ref: 'afpRangeFilter', selector: 'filterlist multislider#afpRange'},\n        {ref: 'ngRangeFilter', selector: 'filterlist multislider#ngRange'},\n        {ref: 'notInLineupFilter', selector: 'filterlist checkbox#notinlineup'},\n        {ref: 'gamesFilters', selector: 'filterlist fieldcontainer#games'}\n    ],\n    \n    // At this point things haven't rendered yet since init gets called on controllers before the launch function\n    // is executed on the Application\n    init: function() {\n        \n        this.control({\n            'filterlist datefield':{\n                change: this.changeDate\n            },\n            'filterlist checkbox#probables':{\n                change: this.changeProbables\n            },\n            'filterlist checkbox#injured':{\n                change: this.changeInjured\n            },\n            'filterlist checkbox#notinlineup':{\n                change: this.changeByLineup\n            },\n            'filterlist fieldcontainer#battingorderFilter checkbox':{\n                change: this.changeLineupSpots\n            },\n            'filterlist fieldcontainer#positions checkbox':{\n                change: this.changePositions\n            },\n            'filterlist fieldcontainer radio':{\n                change: this.changeScoring\n            },\n            'filterlist splitbutton menu':{\n                click: this.changePositionGroups\n            },\n            'filterlist multislider':{\n                changecomplete: this.changeRange\n            },\n            'filterlist fieldcontainer#games button':{\n                click: this.changeGames\n            }/*, use a go button to change the filter on games, instead of this\n            'filterlist fieldcontainer#games checkbox':{\n                change: this.changeGames\n            }*/          \n        });\n    },\n\n    changeGames: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();\n        var gameCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#games checkbox');\n        var value = '';\n        var allChecked = true;\n        for (var i=0; i<gameCheckboxes.length; i++) {\n            var checkbox2 = gameCheckboxes[i];\n            \n            if (checkbox2.getRawValue()) { //is checked\n                if (value !== '') {\n                    value += ':';\n                }\n                var gameId = checkbox2.inputValue;\n                var team1 = this.getTeamCode(gameId.substring(11, 14));\n                var team2 = this.getTeamCode(gameId.substring(18, 21));\n                value += team1 + \":\" + team2;\n            } else {\n                allChecked = false;\n            }\n        }\n        if (allChecked) {\n            statsStore.filters.removeAtKey('team');\n            statsStore.filter();\n        } else {\n            statsStore.filter([{id:'team', property: 'team', value: value}]);\n        }\n    },\n        \n    changeRange: function(slider, newValue, thumb, options) {\n        var filterId = slider.id.substring(0, slider.id.indexOf('Range'));\n        var statsStore = this.getStatsStore();\n        var min = slider.thumbs[0].value;\n        var max = slider.thumbs[1].value;\n        if (min === slider.minValue && max === slider.maxValue) {\n            statsStore.filters.removeAtKey(filterId);\n            statsStore.filter();\n            return;\n        }\n        statsStore.filter([{id: filterId, property: filterId, value: min + '|' + max}]);\n    },\n\n    changeDate: function(datefield, newValue, oldValue, options) {\n        var statsStore = this.getStatsStore();\n        statsStore.filter([{id: 'gameDate', property: 'gameDate', value: newValue.toJSON()}]);\n        var gamesStore = this.getGamesStore();\n        gamesStore.filter([{id:'gameDate', property: 'gameDate', value: newValue.toJSON()}]);\n    },\n    \n    changeProbables: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();\n        statsStore.filter([{id:'probables', property: 'probables', value: newValue}]);\n    },\n\n    changeInjured: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();\n        if (newValue) {\n            statsStore.filter([{id:'inj', property: 'inj', value: false}]);\n        } else {\n            statsStore.filters.removeAtKey('inj');\n            statsStore.filter();\n            return;\n        }\n    },\n    \n    /* Hide or show players that are known to be in or out of the day's starting lineup */\n    changeByLineup: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n\n        this.changeLineupSpots(checkbox, newValue, oldValue, options);\n        return;\n        var statsStore = this.getStatsStore();\n        if (newValue) {\n            var value = '1:2:3:4:5:6:7:8:9:10'; //all spots in lineup\n            statsStore.filter([{id:'border', property: 'border', value: value}]);\n        } else {\n            statsStore.filters.removeAtKey('border');\n            statsStore.filter();\n            return;\n        }\n    },\n    \n    /* Hide or show players that are batting in a particular spot in the lineup (1-9) */\n    changeLineupSpots: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n\n        var statsStore = this.getStatsStore();\n        var bOrderCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#battingorderFilter checkbox');\n        var filteringOutNonStarters = this.getNotInLineupFilter().getRawValue();      \n        var value = filteringOutNonStarters ? '' : 0;\n        for (var i=0; i<bOrderCheckboxes.length; i++) {\n            var checkbox2 = bOrderCheckboxes[i];\n            \n            if (checkbox2.getRawValue()) { //is checked\n                if (value !== '') {\n                    value += ':';\n                }\n                value += checkbox2.inputValue;\n            }\n        }\n        if (value !== '') {\n            value += ':';\n        }\n        value += \"10\"; // always include pitcher\n        \n        if (value === '0:1:2:3:4:5:6:7:8:9:10') {\n            statsStore.filters.removeAtKey('border');\n            statsStore.filter();\n            return;\n        } \n        statsStore.filter([{id:'border', property: 'border', value: value}]);\n    },\n    \n    changePositions: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();\n        var positionCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#positions checkbox');\n        var value = '';\n        for (var i=0; i<positionCheckboxes.length; i++) {\n            var checkbox2 = positionCheckboxes[i];\n            \n            if (checkbox2.getRawValue()) { //is checked\n                if (value !== '') {\n                    value += ':';\n                }\n                value += checkbox2.inputValue;\n            }\n        }\n        statsStore.filter([{id:'spos', property: 'spos', value: value}]);\n    },\n    \n    changePositionGroups: function(menu, menuItem, e, options) {\n        var positionCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#positions checkbox');\n        var len = positionCheckboxes.length;\n        var option = menuItem.text;\n        var checkbox, i, pos;\n        if (option === 'none') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];\n                checkbox.suspendEvents(false);\n                checkbox.setValue(false);\n                checkbox.resumeEvents();                \n            }\n        } else if (option === 'all') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];\n                checkbox.suspendEvents(false);\n                checkbox.setValue(true);\n                checkbox.resumeEvents();                \n            }\n        } else if (option === 'pitchers') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];                \n                checkbox.suspendEvents(false);\n                if (checkbox.inputValue === 'P' || checkbox.inputValue === 'SP'){                 \n                    checkbox.setValue(true);\n                } else {\n                    checkbox.setValue(false);\n                }\n                checkbox.resumeEvents();                \n            }\n        } else if (option === 'outfielders') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];                \n                checkbox.suspendEvents(false);\n                pos = checkbox.inputValue;\n                if (pos === 'LF' || pos === 'RF' || pos === 'CF' || pos === 'OF' ){                 \n                    checkbox.setValue(true);\n                } else {\n                    checkbox.setValue(false);\n                }\n                checkbox.resumeEvents();                \n            }\n        } else if (option === 'infielders') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];                \n                checkbox.suspendEvents(false);\n                pos = checkbox.inputValue;\n                if (pos === '1B' || pos === '2B' || pos === '3B' || pos === 'SS'){                 \n                    checkbox.setValue(true);\n                } else {\n                    checkbox.setValue(false);\n                }\n                checkbox.resumeEvents();                \n            }\n        }\n        this.changePositions(checkbox, false, false, null);\n    },\n    \n    changeScoring: function(radiobutton, newValue, oldValue, options) {\n        if (newValue) {\n            var siteDetailsStore = this.getSiteDetailsStore();\n            siteDetailsStore.filter([{id:'siteId', property: 'siteId', value: radiobutton.inputValue}]);\n            siteDetailsStore.load();\n        }\n    },\n\n    onScoringChanged: function(store, records, wasSuccessful, options) {\n        if (records.length === 0) return;\n        var site = records[0];\n        \n        // Change the list of position filters\n        // All positions will reset to checked\n        var posContainer = this.getPositionFilters();\n        posContainer.removeAll(true);\n        var positions = site.get('pos');\n        for (var i=0, mlen=positions.length; i < mlen; i++) {\n            var pos = positions[i];\n            posContainer.add(new Ext.form.field.Checkbox({\n                        boxLabel: pos,\n                        name: 'pos',\n                        checked: true,\n                        inputValue: pos\n                    }));\n        }\n        \n        // change the values for all value range filters\n        var salFilter = this.getSalRangeFilter();\n        salFilter.setMinValue(site.get('salmin'));\n        salFilter.setMaxValue(site.get('salmax'));\n        salFilter.increment = site.get('salstep');\n        salFilter.setValue(0, site.get('salmin'));\n        salFilter.setValue(1, site.get('salmax'));\n\n        var cppFilter = this.getCppRangeFilter();\n        cppFilter.setMinValue(site.get('cppmin'));\n        cppFilter.setMaxValue(site.get('cppmax'));\n        cppFilter.increment = site.get('cppstep');\n        cppFilter.setValue(0, site.get('cppmin'));\n        cppFilter.setValue(1, site.get('cppmax'));\n\n        var afpFilter = this.getAfpRangeFilter();\n        afpFilter.setMinValue(site.get('afpmin'));\n        afpFilter.setMaxValue(site.get('afpmax'));\n        afpFilter.increment = site.get('afpstep');\n        afpFilter.setValue(0, site.get('afpmin'));\n        afpFilter.setValue(1, site.get('afpmax'));\n        \n/*        \n        // set all other filters to default values\n        var probablesFilter = this.getProbablesFilter();\n        probablesFilter.suspendEvents(false);\n        probablesFilter.setValue(true);\n        probablesFilter.resumeEvents();    \n        var injuredFilter = this.getInjuredFilter();\n        injuredFilter.suspendEvents(false);\n        injuredFilter.setValue(false);\n        injuredFilter.resumeEvents();\n        var ngRangeFilter = this.getNgRangeFilter();\n        ngRangeFilter.setValue(0, ngRangeFilter.minValue);\n        ngRangeFilter.setValue(1, ngRangeFilter.maxValue);\n        \n        // reset the filters for batting order\n        var notinlineupFilter = this.getNotInLineupFilter();\n        notinlineupFilter.suspendEvents(false);\n        notinlineupFilter.setValue(false);\n        notinlineupFilter.resumeEvents();\n        var bOrderCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#battingorderFilter checkbox');\n        for (i=0; i<bOrderCheckboxes.length; i++) {\n            var cb = bOrderCheckboxes[i];\n            cb.suspendEvents(false);\n            cb.setValue(true);\n            cb.resumeEvents();\n        }        \n*/        \n        // refresh player store\n        var statsStore = this.getStatsStore();\n        statsStore.filters.removeAtKey('pos');\n        statsStore.filters.removeAtKey('afp');\n        statsStore.filters.removeAtKey('cpp');\n        statsStore.filters.removeAtKey('sal');\n                \n        statsStore.filter([\n            {id: \"gameDate\", property: \"gameDate\", value: this.getDateFilter().value.toJSON()},\n            {id:'scoring', property: 'scoring', value: site.get('siteId')},\n            {id: 'probables', property: 'probables', value: this.getProbablesFilter().value}\n            ]);\n    },\n    \n    onGamesChanged: function(store, records, wasSuccessful, options) {\n        if (records.length === 0) return;\n        // Change the list of all games\n        // All games on a new date will reset to checked\n        var i, mlen, game, gameTime, alin, hlin, gameString;\n        var gameCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#games checkbox');\n        var len = gameCheckboxes.length;\n        var isNewDate = len === 0;\n        \n        // If the game date has not changed, keep track of already checked games\n        var checkedGames = {};\n        if (len > 0) { // yyyy_mm_dd\n            var gameDateFromFilter = Ext.Date.format(this.getDateFilter().value, 'Y_m_d');\n            var gameDateFromCheckboxes = gameCheckboxes[0].inputValue.substring(0,10);\n            if (gameDateFromFilter === gameDateFromCheckboxes) {\n                for (var i = 0; i < len; i++) {\n                    var item = gameCheckboxes[i];\n                    if (item.getValue()) { //is checked\n                        checkedGames[item.inputValue] = 1;\n                    }\n                }\n                isNewDate = false;\n            } else {\n                isNewDate = true;\n            }\n        }\n        \n        //Now, remove all existing games, and add em all back\n        var gamesContainer = this.getGamesFilters();\n        gamesContainer.removeAll(true);\n        for (i=0, mlen=records.length; i < mlen; i++) {\n            game = records[i];\n            gameTime = game.get('gtime');\n            gameTime = Ext.Date.parse(gameTime, 'MS');\n            gameTime = Ext.Date.format(gameTime, 'g:i a');\n            alin = game.get('alin') ? '*' : '';\n            hlin = game.get('hlin') ? '*' : '';\n            gameString = this.getTeamCode(game.get('away')) + \n                alin + ' @' + this.getTeamCode(game.get('home')) + \n                hlin + ' ' + gameTime;\n            var gameId = game.get('gid');\n            var isChecked = isNewDate ? true : checkedGames[gameId] === 1; // true on first load of games list\n            gamesContainer.add(new Ext.form.field.Checkbox({\n                        boxLabel: gameString.toUpperCase(),\n                        name: 'game',\n                        checked: isChecked,\n                        inputValue: gameId\n                    }));\n        }\n        gamesContainer.add(Ext.create('Ext.Button', {\n            text: 'Apply Game Filters',\n            id: 'gamesGo'\n        }));\n    },\n    \n    /* a team id is the 3 character identifier used by mlb;\n    a team code is a more recognizeable 2-3 character identifier used at many sites */\n    getTeamCode: function(teamId) {\n        switch (teamId.toUpperCase())\n        {\n            case \"ANA\":\n                return \"laa\";\n            case \"CHA\":\n                return \"cws\";\n            case \"CHN\":\n                return \"chc\";\n            case \"KCA\":\n                return \"kc\";\n            case \"LAN\":\n                return \"lad\";\n            case \"NYA\":\n                return \"nyy\";\n            case \"NYN\":\n                return \"nym\";\n            case \"SDN\":\n                return \"sd\";\n            case \"SFN\":\n                return \"sf\";\n            case \"TBA\":\n                return \"tb\";\n            case \"WAS\":\n                return \"wsh\";\n            default:\n                return teamId.toLowerCase();\n        }\n    },\n    \n    onLaunch: function() {\n        var host = 'http://localhost:49533';\n        if (location.hostname.indexOf('cloudapp.net') > 0) {\n            host = 'http://dfst.cloudapp.net';  //live azure\n        }\n        \n        // Set things up to update filters when we switch sites\n        var siteDetailsStore = this.getSiteDetailsStore();\n        siteDetailsStore.proxy.url = host + '/api/site/';\n        siteDetailsStore.filter([{id:'siteId', property: 'siteId', value: 'fd'}]);\n        siteDetailsStore.on('load', this.onScoringChanged, this);\n        siteDetailsStore.load();\n        \n        // Set things up to update games filters when we switch sites\n        var gamesStore = this.getGamesStore();\n        gamesStore.proxy.url = host + '/api/games/';\n        gamesStore.on('load', this.onGamesChanged, this);\n        gamesStore.filter([{id:'gameDate', property: 'gameDate', value: (new Date()).toJSON()}]);\n        \n        // Set up a timer to update the games store periodically, so we can\n        // show a visual indicator that the lineup is ready\n        var task = {\n            run: function(){\n                var gamesStore = this.getGamesStore();\n                gamesStore.load();\n            },\n            scope: this,\n            interval: 1000 * 60 // every 60 seconds\n        };\n        Ext.TaskManager.start(task);        \n    }\n    \n});\n"]],"start1":0,"start2":0,"length1":0,"length2":20536}]],"length":20536}
{"contributors":[],"silentsave":false,"ts":1359302697920,"patch":[[{"diffs":[[0,"etStatsStore();\n"],[1,"        statsStore.filters.removeAtKey('team'); // clear all game filters\n"],[0,"        statsSto"]],"start1":4538,"start2":4538,"length1":32,"length2":106},{"diffs":[[0,"[{id:'gameDate',"],[1," sport: DFST.AppSettings.sport,"],[0," property: 'game"]],"start1":4796,"start2":4796,"length1":32,"length2":63},{"diffs":[[0,"    },\n    \n    "],[-1,"chan"],[0,"ge"],[1,"t"],[0,"Positions: funct"]],"start1":8557,"start2":8557,"length1":38,"length2":35},{"diffs":[[0,"ions"],[-1,": function(checkbox, newValue, oldValue, op"],[1,"FilterValue: func"],[0,"tion"],[-1,"s"],[1,"("],[0,") {\n"]],"start1":8581,"start2":8581,"length1":56,"length2":30},{"diffs":[[0,"  /*"],[-1,"\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();"],[1," Return the value that will be sent to the server as the position\n        filter value, filter id = spos */"],[0,"\n   "]],"start1":8617,"start2":8617,"length1":372,"length2":115},{"diffs":[[0,"    "],[-1,"statsStore.filter([{id:'spos', property: 'spos', value: v"],[1,"return value;\n    },\n    \n    changePositions: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        this.getStatsStore()\n            .filter([{id:'spos', property: 'spos', \n            value: this.getPositionsFilterV"],[0,"alue"],[1,"()"],[0,"}]);"]],"start1":9201,"start2":9201,"length1":69,"length2":563},{"diffs":[[0,"    {id:"],[-1," \""],[1,"'"],[0,"gameDate"],[-1,"\""],[1,"'"],[0,", proper"]],"start1":15830,"start2":15830,"length1":27,"length2":26},{"diffs":[[0,"ty: "],[-1,"\""],[1,"'"],[0,"gameDate"],[-1,"\""],[1,"'"],[0,", va"]],"start1":15856,"start2":15856,"length1":18,"length2":18},{"diffs":[[0,"    {id:"],[-1," "],[0,"'probabl"]],"start1":16001,"start2":16001,"length1":17,"length2":16},{"diffs":[[0,").value}"],[1,",\n            {id:'spos', property: 'spos', value: this.getPositionsFilterValue()}"],[0,"\n       "]],"start1":16076,"start2":16076,"length1":16,"length2":98}]],"length":20929,"saved":false}
{"ts":1359302721524,"patch":[[{"diffs":[[0,"[{id:'gameDate',"],[1," sport: DFST.AppSettings.sport,"],[0," property: 'game"]],"start1":20409,"start2":20409,"length1":32,"length2":63}]],"length":20960,"saved":false}
{"ts":1359303545248,"patch":[[{"diffs":[[0,"te',"],[-1," sport: DFST.AppSettings.sport,"],[0," pro"]],"start1":20421,"start2":20421,"length1":39,"length2":8},{"diffs":[[0,"ate()).toJSON()}"],[1,",\n                        "],[0,"]);\n        \n   "]],"start1":20461,"start2":20461,"length1":32,"length2":58}]],"length":20955,"saved":false}
{"ts":1359375611789,"patch":[[{"diffs":[[0,"');\n            "],[1,"//"],[0,"gameTime = Ext.D"]],"start1":17790,"start2":17790,"length1":32,"length2":34},{"diffs":[[0,"ime, 'MS');\n"],[1,"            gameTime = Ext.Date.parse(gameTime);\n"],[0,"            "]],"start1":17839,"start2":17839,"length1":24,"length2":73}]],"length":21164,"saved":false}
{"ts":1359375821758,"patch":[[{"diffs":[[0," gameTime = "],[-1,"Ext.Date.pars"],[1,"new Dat"],[0,"e(gameTime);"]],"start1":17862,"start2":17862,"length1":37,"length2":31}]],"length":21158,"saved":false}
{"ts":1359376717594,"patch":[[{"diffs":[[0,"meTime);"],[1," // this time is a utc time, but \n            var tzo = gameTime.getTimezoneOffset();\n            gameTime = Ext.Date.add(gameTime, Ext.Date.minute, tzo);"],[0,"\n       "]],"start1":17885,"start2":17885,"length1":16,"length2":170}]],"length":21312,"saved":false}
{"ts":1359376728043,"patch":[[{"diffs":[[0,"c time, "],[-1,"but"],[1,"so adjust:"],[0," \n      "]],"start1":17914,"start2":17914,"length1":19,"length2":26}]],"length":21319,"saved":false}
{"ts":1359377129307,"patch":[[{"diffs":[[0,"ate."],[-1,"minute"],[1,"DAY"],[0,", tzo"],[1,"/60"],[0,");\n "]],"start1":18037,"start2":18037,"length1":19,"length2":19}]],"length":21319,"saved":false}
{"ts":1359377231006,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"gameTime"]],"start1":17798,"start2":17798,"length1":18,"length2":16},{"diffs":[[0,"e = "],[-1,"Ext.Date.parse(gameTime, 'MS');\n            gameTime = new Date(gameTime); // this time is a utc time, so adjust"],[1,"new Date(gameTime); // this time is actually utc, but new Date treats\n            // it like local time, so add the timeoffset "],[0,": \n "]],"start1":17813,"start2":17813,"length1":120,"length2":135}]],"length":21332,"saved":false}
{"ts":1359377235548,"patch":[[{"diffs":[[0,"eTime); "],[1,"\n            "],[0,"// this "]],"start1":17829,"start2":17829,"length1":16,"length2":29}]],"length":21345,"saved":false}
{"ts":1359377334679,"patch":[[{"diffs":[[0,"ate."],[-1,"DAY"],[1,"MINUTE"],[0,", tzo"],[-1,"/60"],[0,");\n "]],"start1":18063,"start2":18063,"length1":19,"length2":19}]],"length":21345,"saved":false}
{"ts":1359377547588,"patch":[[{"diffs":[[0,"n(teamId) {\n"],[1,"        if (DFST.AppSettings.sport == \"mlb\") {\n    "],[0,"        swit"]],"start1":19156,"start2":19156,"length1":24,"length2":75},{"diffs":[[0,"        "],[1," "],[-1,"{\n"],[1,"   {\n    "],[0,"        "]],"start1":19257,"start2":19257,"length1":18,"length2":26},{"diffs":[[0,"                "],[1,"    "],[0,"return \"laa\";\n  "]],"start1":19299,"start2":19299,"length1":32,"length2":36},{"diffs":[[0,"a\";\n            "],[1,"  "],[1,"  "],[0,"case \"CHA\":\n    "]],"start1":19329,"start2":19329,"length1":32,"length2":36},{"diffs":[[0,"case \"CHA\":\n"],[1,"    "],[0,"            "]],"start1":19349,"start2":19349,"length1":24,"length2":28},{"diffs":[[0,"s\";\n            "],[1,"    "],[0,"case \"CHN\":\n    "]],"start1":19391,"start2":19391,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"return \"chc\";\n  "]],"start1":19423,"start2":19423,"length1":32,"length2":36},{"diffs":[[0,"turn \"chc\";\n"],[1,"    "],[0,"            "]],"start1":19445,"start2":19445,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"return \"kc\";\n   "]],"start1":19485,"start2":19485,"length1":32,"length2":36},{"diffs":[[0,"eturn \"kc\";\n"],[1,"    "],[0,"            "]],"start1":19506,"start2":19506,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"return \"lad\";\n  "]],"start1":19546,"start2":19546,"length1":32,"length2":36},{"diffs":[[0,"d\";\n            "],[1,"    "],[0,"case \"NYA\":\n    "]],"start1":19576,"start2":19576,"length1":32,"length2":36},{"diffs":[[0,"case \"NYA\":\n"],[1,"    "],[0,"            "]],"start1":19596,"start2":19596,"length1":24,"length2":28},{"diffs":[[0,"y\";\n            "],[1,"    "],[0,"case \"NYN\":\n    "]],"start1":19638,"start2":19638,"length1":32,"length2":36},{"diffs":[[0,"case \"NYN\":\n"],[1,"    "],[0,"            "]],"start1":19658,"start2":19658,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"case \"SDN\":\n"]],"start1":19704,"start2":19704,"length1":24,"length2":28},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"return \"sd\";\n   "]],"start1":19732,"start2":19732,"length1":32,"length2":36},{"diffs":[[0,"eturn \"sd\";\n"],[1,"    "],[0,"            "]],"start1":19753,"start2":19753,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"return \"sf\";\n   "]],"start1":19793,"start2":19793,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"case \"TBA\":\n"]],"start1":19826,"start2":19826,"length1":24,"length2":28},{"diffs":[[0,"case \"TBA\":\n"],[1,"    "],[0,"            "]],"start1":19842,"start2":19842,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"case \"WAS\":\n"]],"start1":19887,"start2":19887,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"return \"wsh\";\n  "]],"start1":19915,"start2":19915,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"default:"]],"start1":19953,"start2":19953,"length1":16,"length2":20},{"diffs":[[0,"efault:\n    "],[1,"                return teamId.toLowerCase();\n            }\n"],[0,"            "]],"start1":19966,"start2":19966,"length1":24,"length2":83}]],"length":21551,"saved":false}
{"ts":1359377606951,"patch":[[{"diffs":[[0,";\n            }\n"],[1,"        }\n"],[0,"            retu"]],"start1":20021,"start2":20021,"length1":32,"length2":42},{"diffs":[[0,"owerCase();\n"],[-1,"        }\n"],[0,"    },\n    \n"]],"start1":20076,"start2":20076,"length1":34,"length2":24}]],"length":21551,"saved":false}
{"ts":1359377609541,"patch":[[{"diffs":[[0,"      }\n        "],[-1,"    "],[0,"return teamId.to"]],"start1":20039,"start2":20039,"length1":36,"length2":32}]],"length":21547,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359826374765,"patch":[[{"diffs":[[0,"wValue.toJSON()}"],[-1,""],[0,""],[1,",\n                           {id: 'sport', property: 'sport', value: DFST.AppSettings.sport}"],[0,"]);\n    },\n    \n"]],"start1":4875,"start2":4875,"length1":32,"length2":124},{"diffs":[[0,"ilter([{id:'site"],[-1,"Id"],[1,"Abb"],[0,"', property: 'si"]],"start1":12571,"start2":12571,"length1":34,"length2":35},{"diffs":[[0," property: 'site"],[-1,"Id"],[1,"Abb"],[0,"', value: radiob"]],"start1":12592,"start2":12592,"length1":34,"length2":35},{"diffs":[[0,"et('site"],[-1,"Id"],[1,"Abb"],[0,"')},\n   "]],"start1":16072,"start2":16072,"length1":18,"length2":19},{"diffs":[[0,"        "],[-1,"//"],[0,""],[1,""],[0,"gameTime"]],"start1":18088,"start2":18088,"length1":18,"length2":16},{"diffs":[[0,"                "],[1,"    "],[0,"return \"cws\";\n  "]],"start1":19364,"start2":19364,"length1":32,"length2":36},{"diffs":[[0,"case \"CHN\":\n"],[-1,"    "],[0,"            "]],"start1":19414,"start2":19414,"length1":28,"length2":24},{"diffs":[[0,"            "],[1,"    "],[0,"case \"SDN\":\n"]],"start1":19707,"start2":19707,"length1":24,"length2":28},{"diffs":[[0,"case \"SDN\":\n"],[1,"    "],[0,"            "]],"start1":19723,"start2":19723,"length1":24,"length2":28},{"diffs":[[0,"            "],[-1,"    "],[0,""],[1,""],[0,"case \"TBA\":\n"]],"start1":19833,"start2":19833,"length1":28,"length2":24},{"diffs":[[0,"                "],[-1,"    "],[0,""],[1,""],[0,"return \"wsh\";\n  "]],"start1":19922,"start2":19922,"length1":36,"length2":32},{"diffs":[[0,"y: 'site"],[-1,"Id"],[1,"Abb"],[0,"', value"]],"start1":20547,"start2":20547,"length1":18,"length2":19},{"diffs":[[0,"                "],[-1,""],[0,""],[1,"   {id: 'sport', property: 'sport', value: DFST.AppSettings.sport}"],[0,"]);\n        \n   "]],"start1":21017,"start2":21017,"length1":32,"length2":98}]],"length":21551,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359826723530,"patch":[[{"diffs":[[0," property: 'site"],[-1,"Abb"],[1,"Id"],[0,"', value: 'fd'}]"]],"start1":20539,"start2":20539,"length1":35,"length2":34},{"diffs":[[0,"e: '"],[-1,"fd"],[1,"2"],[0,"'}])"]],"start1":20564,"start2":20564,"length1":10,"length2":9}]],"length":21549,"saved":false}
{"ts":1359826890187,"patch":[[{"diffs":[[0,"id:'site"],[-1,"Abb"],[1,"Id"],[0,"', prope"]],"start1":12579,"start2":12579,"length1":19,"length2":18},{"diffs":[[0,"y: 'site"],[-1,"Abb"],[1,"Id"],[0,"', value"]],"start1":12599,"start2":12599,"length1":19,"length2":18},{"diffs":[[0,"site"],[-1,"Abb"],[1,"Id"],[0,"')},"]],"start1":16074,"start2":16074,"length1":11,"length2":10}]],"length":21546,"saved":false}
{"ts":1359829199185,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"var team1 = this"]],"start1":3389,"start2":3389,"length1":32,"length2":34},{"diffs":[[0,"            "],[1,"//"],[0,"var team2 = "]],"start1":3467,"start2":3467,"length1":24,"length2":26},{"diffs":[[0," += "],[-1,"team1 + \":\" + team2"],[1,"gameId"],[0,";\n  "]],"start1":3558,"start2":3558,"length1":27,"length2":14}]],"length":21537,"saved":false}
{"ts":1359829319646,"patch":[[{"diffs":[[0,"r([{id:'"],[-1,"team"],[1,"gameId"],[0,"', prope"]],"start1":3807,"start2":3807,"length1":20,"length2":22},{"diffs":[[0,"perty: '"],[-1,"team"],[1,"gameId"],[0,"', value"]],"start1":3827,"start2":3827,"length1":20,"length2":22}]],"length":21541,"saved":false}
{"ts":1359829343820,"patch":[[{"diffs":[[0,"eAtKey('"],[-1,"team"],[1,"gameId"],[0,"');\n    "]],"start1":3713,"start2":3713,"length1":20,"length2":22}]],"length":21543,"saved":false}
{"ts":1359829453297,"patch":[[{"diffs":[[0,"eAtKey('"],[-1,"team"],[1,"gameId"],[0,"'); // c"]],"start1":4583,"start2":4583,"length1":20,"length2":22}]],"length":21545,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360237929110,"patch":[[{"diffs":[[0,"DetailsStore();\n"],[1,"            var sportId = DFST.AppSettings.sport == \"NBA\" ? 4 : 2;\n"],[0,"            site"]],"start1":12524,"start2":12524,"length1":32,"length2":99}]],"length":21612,"saved":false}
{"ts":1360237975403,"patch":[[{"diffs":[[0,"lsStore.filter(["],[1,"\n                "],[0,"{id:'siteId', pr"]],"start1":12628,"start2":12628,"length1":32,"length2":49},{"diffs":[[0,".inputValue}"],[1,",\n                {id:'sportId', property: 'sportId', value: sportId}\n                "],[0,"]);\n        "]],"start1":12713,"start2":12713,"length1":24,"length2":110}]],"length":21715,"saved":false}
{"ts":1360238030125,"patch":[[{"diffs":[[0,"ore.filter(["],[1,"\n            "],[0,"{id:'siteId'"]],"start1":20680,"start2":20680,"length1":24,"length2":37},{"diffs":[[0,"ue: '2'}"],[1,",\n            {id:'sportId', property: 'sportId', value: '4'}\n            "],[0,"]);\n    "]],"start1":20742,"start2":20742,"length1":16,"length2":90}]],"length":21802,"saved":false}
{"ts":1360238172546,"patch":[[{"diffs":[[0,"== \""],[-1,"NBA"],[1,"mlb"],[0,"\" ? "],[-1,"4 : 2"],[1,"2 : 4"],[0,";\n  "]],"start1":12589,"start2":12589,"length1":20,"length2":20}]],"length":21802,"saved":false}
{"ts":1360239408001,"patch":[[{"diffs":[[0,"    var "],[-1,"sport"],[1,"dfsGame"],[0,"Id = DFS"]],"start1":12548,"start2":12548,"length1":21,"length2":23},{"diffs":[[0,"\" ? "],[-1,"2 : 4"],[1,"1 : 1"],[0,";\n  "]],"start1":12598,"start2":12598,"length1":13,"length2":13},{"diffs":[[0,"           {id:'"],[-1,"sport"],[1,"dfsGame"],[0,"Id', property: '"]],"start1":12734,"start2":12734,"length1":37,"length2":39},{"diffs":[[0,"Id', property: '"],[-1,"sport"],[1,"dfsGame"],[0,"Id', value: spor"]],"start1":12757,"start2":12757,"length1":37,"length2":39},{"diffs":[[0," value: "],[-1,"sport"],[1,"dfsGame"],[0,"Id}\n    "]],"start1":12784,"start2":12784,"length1":21,"length2":23},{"diffs":[[0,"   {id:'"],[-1,"sport"],[1,"dfsGame"],[0,"Id', pro"]],"start1":20769,"start2":20769,"length1":21,"length2":23},{"diffs":[[0,"perty: '"],[-1,"sport"],[1,"dfsGame"],[0,"Id', val"]],"start1":20792,"start2":20792,"length1":21,"length2":23},{"diffs":[[0,"value: '"],[-1,"4"],[1,"1"],[0,"'}\n     "]],"start1":20812,"start2":20812,"length1":17,"length2":17}]],"length":21814,"saved":false}
{"ts":1360246023557,"patch":[[{"diffs":[[0,"s ready\n"],[1,"        if (DFST.AppSettings.sport == \"mlb\")\n        {\n    "],[0,"        "]],"start1":21503,"start2":21503,"length1":16,"length2":75},{"diffs":[[0,"ask = {\n"],[1,"    "],[0,"        "]],"start1":21583,"start2":21583,"length1":16,"length2":20},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"var gamesStore ="]],"start1":21624,"start2":21624,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"gamesStore.load("]],"start1":21683,"start2":21683,"length1":32,"length2":36},{"diffs":[[0,"();\n            "],[1,"    "],[0,"},\n            s"]],"start1":21718,"start2":21718,"length1":32,"length2":36},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"scope: t"]],"start1":21745,"start2":21745,"length1":16,"length2":20},{"diffs":[[0,": this,\n"],[1,"    "],[0,"        "]],"start1":21762,"start2":21762,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"    "],[0,"};\n     "]],"start1":21826,"start2":21826,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"Ext.Task"]],"start1":21841,"start2":21841,"length1":16,"length2":20},{"diffs":[[0,"k);        \n"],[1,"        }\n"],[0,"    }\n    \n}"]],"start1":21878,"start2":21878,"length1":24,"length2":34}]],"length":21915,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360412270425,"patch":[[{"diffs":[[0,"bel: pos"],[1,".name"],[0,",\n      "]],"start1":13446,"start2":13446,"length1":16,"length2":21},{"diffs":[[0,"lue: pos"],[1,".id"],[0,"\n       "]],"start1":13568,"start2":13568,"length1":16,"length2":19}]],"length":21923,"saved":false}
{"ts":1360413736475,"patch":[[{"diffs":[[0,"d = "],[-1,"s"],[0,"pos"],[-1," "],[1,"Id"],[0,"*/\n "]],"start1":8808,"start2":8808,"length1":13,"length2":13}]],"length":21923,"saved":false}
{"ts":1360413749656,"patch":[[{"diffs":[[0,"ilter([{id:'"],[-1,"s"],[0,"pos"],[1,"Id"],[0,"', property:"]],"start1":9764,"start2":9764,"length1":28,"length2":29},{"diffs":[[0,"perty: '"],[-1,"s"],[0,"pos"],[1,"Id"],[0,"', \n    "]],"start1":9787,"start2":9787,"length1":20,"length2":21}]],"length":21925,"saved":false}
{"ts":1360413766697,"patch":[[{"diffs":[[0,"   {id:'"],[-1,"s"],[0,"pos"],[1,"Id"],[0,"', prope"]],"start1":16374,"start2":16374,"length1":20,"length2":21},{"diffs":[[0,"y: '"],[-1,"s"],[0,"pos"],[1,"Id"],[0,"', v"]],"start1":16397,"start2":16397,"length1":12,"length2":13}]],"length":21927,"saved":false}
{"ts":1360416980290,"patch":[[{"diffs":[[0,"value: '"],[-1,"1"],[1,"2"],[0,"'}\n     "]],"start1":20824,"start2":20824,"length1":17,"length2":17}]],"length":21927,"saved":false}
{"ts":1360417174971,"patch":[[{"diffs":[[0,"\" ? "],[-1,"1"],[1,"2"],[0," :"],[1," 2;//def.fd game\n            //TODO: siteDetails store should only need to filter by gameId\n            var siteId = radiobutton.inputValue;\n            if (siteId == 5) dfsGameId ="],[0," 1;\n"]],"start1":12600,"start2":12600,"length1":11,"length2":192}]],"length":22108,"saved":false}
{"ts":1360417346469,"patch":[[{"diffs":[[0,"te.get('"],[-1,"sit"],[1,"dfsGam"],[0,"eId')},\n"]],"start1":16434,"start2":16434,"length1":19,"length2":22}]],"length":22111,"saved":false}
