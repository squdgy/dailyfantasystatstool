{"ts":1338846257928,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Ext.define('DFST.controller.Filters', {\n    extend: 'Ext.app.Controller',\n\n    stores: ['Stats', 'PlayerStats', 'SiteDetails', 'Games'],\n    models: ['StatSet'],\n    views: ['filter.List'],\n    \n    refs: [\n        {ref: 'dateFilter', selector: 'filterlist datefield'},\n        {ref: 'probablesFilter', selector: 'filterlist checkbox#probables'},\n        {ref: 'injuredFilter', selector: 'filterlist checkbox#injured'},\n        {ref: 'positionFilters', selector: 'filterlist fieldcontainer#positions'},\n        {ref: 'salRangeFilter', selector: 'filterlist multislider#salRange'},\n        {ref: 'cppRangeFilter', selector: 'filterlist multislider#cppRange'},\n        {ref: 'afpRangeFilter', selector: 'filterlist multislider#afpRange'},\n        {ref: 'ngRangeFilter', selector: 'filterlist multislider#ngRange'},\n        {ref: 'notInLineupFilter', selector: 'filterlist checkbox#notinlineup'},\n        {ref: 'gamesFilters', selector: 'filterlist fieldcontainer#games'}\n    ],\n    \n    // At this point things haven't rendered yet since init gets called on controllers before the launch function\n    // is executed on the Application\n    init: function() {\n        \n        this.control({\n            'filterlist datefield':{\n                change: this.changeDate\n            },\n            'filterlist checkbox#probables':{\n                change: this.changeProbables\n            },\n            'filterlist checkbox#injured':{\n                change: this.changeInjured\n            },\n            'filterlist checkbox#notinlineup':{\n                change: this.changeByLineup\n            },\n            'filterlist fieldcontainer#battingorderFilter checkbox':{\n                change: this.changeLineupSpots\n            },\n            'filterlist fieldcontainer#positions checkbox':{\n                change: this.changePositions\n            },\n            'filterlist fieldcontainer radio':{\n                change: this.changeScoring\n            },\n            'filterlist splitbutton menu':{\n                click: this.changePositionGroups\n            },\n            'filterlist multislider':{\n                changecomplete: this.changeRange\n            },\n            'filterlist fieldcontainer#games button':{\n                click: this.changeGames\n            }/*, use a go button to change the filter on games, instead of this\n            'filterlist fieldcontainer#games checkbox':{\n                change: this.changeGames\n            }*/          \n        });\n    },\n\n    changeGames: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();\n        var gameCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#games checkbox');\n        var value = '';\n        var allChecked = true;\n        for (var i=0; i<gameCheckboxes.length; i++) {\n            var checkbox2 = gameCheckboxes[i];\n            \n            if (checkbox2.getRawValue()) { //is checked\n                if (value !== '') {\n                    value += ':';\n                }\n                var gameId = checkbox2.inputValue;\n                var team1 = this.getTeamCode(gameId.substring(11, 14));\n                var team2 = this.getTeamCode(gameId.substring(18, 21));\n                value += team1 + \":\" + team2;\n            } else {\n                allChecked = false;\n            }\n        }\n        if (allChecked) {\n            statsStore.filters.removeAtKey('team');\n            statsStore.filter();\n        } else {\n            statsStore.filter([{id:'team', property: 'team', value: value}]);\n        }\n    },\n        \n    changeRange: function(slider, newValue, thumb, options) {\n        var filterId = slider.id.substring(0, slider.id.indexOf('Range'));\n        var statsStore = this.getStatsStore();\n        var min = slider.thumbs[0].value;\n        var max = slider.thumbs[1].value;\n        if (min === slider.minValue && max === slider.maxValue) {\n            statsStore.filters.removeAtKey(filterId);\n            statsStore.filter();\n            return;\n        }\n        statsStore.filter([{id: filterId, property: filterId, value: min + '|' + max}]);\n    },\n\n    changeDate: function(datefield, newValue, oldValue, options) {\n        var statsStore = this.getStatsStore();\n        statsStore.filter([{id: 'gameDate', property: 'gameDate', value: newValue.toJSON()}]);\n        var gamesStore = this.getGamesStore();\n        gamesStore.filter([{id:'gameDate', property: 'gameDate', value: newValue.toJSON()}]);\n    },\n    \n    changeProbables: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();\n        statsStore.filter([{id:'probables', property: 'probables', value: newValue}]);\n    },\n\n    changeInjured: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();\n        if (newValue) {\n            statsStore.filter([{id:'inj', property: 'inj', value: false}]);\n        } else {\n            statsStore.filters.removeAtKey('inj');\n            statsStore.filter();\n            return;\n        }\n    },\n    \n    /* Hide or show players that are known to be in or out of the day's starting lineup */\n    changeByLineup: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n\n        this.changeLineupSpots(checkbox, newValue, oldValue, options);\n        return;\n        var statsStore = this.getStatsStore();\n        if (newValue) {\n            var value = '1:2:3:4:5:6:7:8:9:10'; //all spots in lineup\n            statsStore.filter([{id:'border', property: 'border', value: value}]);\n        } else {\n            statsStore.filters.removeAtKey('border');\n            statsStore.filter();\n            return;\n        }\n    },\n    \n    /* Hide or show players that are batting in a particular spot in the lineup (1-9) */\n    changeLineupSpots: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n\n        var statsStore = this.getStatsStore();\n        var bOrderCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#battingorderFilter checkbox');\n        var filteringOutNonStarters = this.getNotInLineupFilter().getRawValue();      \n        var value = filteringOutNonStarters ? '' : 0;\n        for (var i=0; i<bOrderCheckboxes.length; i++) {\n            var checkbox2 = bOrderCheckboxes[i];\n            \n            if (checkbox2.getRawValue()) { //is checked\n                if (value !== '') {\n                    value += ':';\n                }\n                value += checkbox2.inputValue;\n            }\n        }\n        if (value !== '') {\n            value += ':';\n        }\n        value += \"10\"; // always include pitcher\n        \n        if (value === '0:1:2:3:4:5:6:7:8:9:10') {\n            statsStore.filters.removeAtKey('border');\n            statsStore.filter();\n            return;\n        } \n        statsStore.filter([{id:'border', property: 'border', value: value}]);\n    },\n    \n    changePositions: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();\n        var positionCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#positions checkbox');\n        var value = '';\n        for (var i=0; i<positionCheckboxes.length; i++) {\n            var checkbox2 = positionCheckboxes[i];\n            \n            if (checkbox2.getRawValue()) { //is checked\n                if (value !== '') {\n                    value += ':';\n                }\n                value += checkbox2.inputValue;\n            }\n        }\n        statsStore.filter([{id:'spos', property: 'spos', value: value}]);\n    },\n    \n    changePositionGroups: function(menu, menuItem, e, options) {\n        var positionCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#positions checkbox');\n        var len = positionCheckboxes.length;\n        var option = menuItem.text;\n        var checkbox, i, pos;\n        if (option === 'none') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];\n                checkbox.suspendEvents(false);\n                checkbox.setValue(false);\n                checkbox.resumeEvents();                \n            }\n        } else if (option === 'all') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];\n                checkbox.suspendEvents(false);\n                checkbox.setValue(true);\n                checkbox.resumeEvents();                \n            }\n        } else if (option === 'pitchers') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];                \n                checkbox.suspendEvents(false);\n                if (checkbox.inputValue === 'P' || checkbox.inputValue === 'SP'){                 \n                    checkbox.setValue(true);\n                } else {\n                    checkbox.setValue(false);\n                }\n                checkbox.resumeEvents();                \n            }\n        } else if (option === 'outfielders') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];                \n                checkbox.suspendEvents(false);\n                pos = checkbox.inputValue;\n                if (pos === 'LF' || pos === 'RF' || pos === 'CF' || pos === 'OF' ){                 \n                    checkbox.setValue(true);\n                } else {\n                    checkbox.setValue(false);\n                }\n                checkbox.resumeEvents();                \n            }\n        } else if (option === 'infielders') {\n            for (i=0; i<len; i++) {\n                checkbox = positionCheckboxes[i];                \n                checkbox.suspendEvents(false);\n                pos = checkbox.inputValue;\n                if (pos === '1B' || pos === '2B' || pos === '3B' || pos === 'SS'){                 \n                    checkbox.setValue(true);\n                } else {\n                    checkbox.setValue(false);\n                }\n                checkbox.resumeEvents();                \n            }\n        }\n        this.changePositions(checkbox, false, false, null);\n    },\n    \n    changeScoring: function(radiobutton, newValue, oldValue, options) {\n        if (newValue) {\n            var siteDetailsStore = this.getSiteDetailsStore();\n            siteDetailsStore.filter([{id:'siteId', property: 'siteId', value: radiobutton.inputValue}]);\n            siteDetailsStore.load();\n        }\n    },\n\n    onScoringChanged: function(store, records, wasSuccessful, options) {\n        if (records.length === 0) return;\n        var site = records[0];\n        \n        // Change the list of position filters\n        // All positions will reset to checked\n        var posContainer = this.getPositionFilters();\n        posContainer.removeAll(true);\n        var positions = site.get('pos');\n        for (var i=0, mlen=positions.length; i < mlen; i++) {\n            var pos = positions[i];\n            posContainer.add(new Ext.form.field.Checkbox({\n                        boxLabel: pos,\n                        name: 'pos',\n                        checked: true,\n                        inputValue: pos\n                    }));\n        }\n        \n        // change the values for all value range filters\n        var salFilter = this.getSalRangeFilter();\n        salFilter.setMinValue(site.get('salmin'));\n        salFilter.setMaxValue(site.get('salmax'));\n        salFilter.increment = site.get('salstep');\n        salFilter.setValue(0, site.get('salmin'));\n        salFilter.setValue(1, site.get('salmax'));\n\n        var cppFilter = this.getCppRangeFilter();\n        cppFilter.setMinValue(site.get('cppmin'));\n        cppFilter.setMaxValue(site.get('cppmax'));\n        cppFilter.increment = site.get('cppstep');\n        cppFilter.setValue(0, site.get('cppmin'));\n        cppFilter.setValue(1, site.get('cppmax'));\n\n        var afpFilter = this.getAfpRangeFilter();\n        afpFilter.setMinValue(site.get('afpmin'));\n        afpFilter.setMaxValue(site.get('afpmax'));\n        afpFilter.increment = site.get('afpstep');\n        afpFilter.setValue(0, site.get('afpmin'));\n        afpFilter.setValue(1, site.get('afpmax'));\n        \n/*        \n        // set all other filters to default values\n        var probablesFilter = this.getProbablesFilter();\n        probablesFilter.suspendEvents(false);\n        probablesFilter.setValue(true);\n        probablesFilter.resumeEvents();    \n        var injuredFilter = this.getInjuredFilter();\n        injuredFilter.suspendEvents(false);\n        injuredFilter.setValue(false);\n        injuredFilter.resumeEvents();\n        var ngRangeFilter = this.getNgRangeFilter();\n        ngRangeFilter.setValue(0, ngRangeFilter.minValue);\n        ngRangeFilter.setValue(1, ngRangeFilter.maxValue);\n        \n        // reset the filters for batting order\n        var notinlineupFilter = this.getNotInLineupFilter();\n        notinlineupFilter.suspendEvents(false);\n        notinlineupFilter.setValue(false);\n        notinlineupFilter.resumeEvents();\n        var bOrderCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#battingorderFilter checkbox');\n        for (i=0; i<bOrderCheckboxes.length; i++) {\n            var cb = bOrderCheckboxes[i];\n            cb.suspendEvents(false);\n            cb.setValue(true);\n            cb.resumeEvents();\n        }        \n*/        \n        // refresh player store\n        var statsStore = this.getStatsStore();\n        statsStore.filters.removeAtKey('pos');\n        statsStore.filters.removeAtKey('afp');\n        statsStore.filters.removeAtKey('cpp');\n        statsStore.filters.removeAtKey('sal');\n                \n        statsStore.filter([\n            {id: \"gameDate\", property: \"gameDate\", value: this.getDateFilter().value.toJSON()},\n            {id:'scoring', property: 'scoring', value: site.get('siteId')},\n            {id: 'probables', property: 'probables', value: this.getProbablesFilter().value}\n            ]);\n    },\n    \n    onGamesChanged: function(store, records, wasSuccessful, options) {\n        if (records.length === 0) return;\n        // Change the list of all games\n        // All games on a new date will reset to checked\n        var i, mlen, game, gameTime, alin, hlin, gameString;\n        var gameCheckboxes = Ext.ComponentQuery.query('filterlist fieldcontainer#games checkbox');\n        var len = gameCheckboxes.length;\n        var isNewDate = len === 0;\n        \n        // If the game date has not changed, keep track of already checked games\n        var checkedGames = {};\n        if (len > 0) { // yyyy_mm_dd\n            var gameDateFromFilter = Ext.Date.format(this.getDateFilter().value, 'Y_m_d');\n            var gameDateFromCheckboxes = gameCheckboxes[0].inputValue.substring(0,10);\n            if (gameDateFromFilter === gameDateFromCheckboxes) {\n                for (var i = 0; i < len; i++) {\n                    var item = gameCheckboxes[i];\n                    if (item.getValue()) { //is checked\n                        checkedGames[item.inputValue] = 1;\n                    }\n                }\n                isNewDate = false;\n            } else {\n                isNewDate = true;\n            }\n        }\n        \n        //Now, remove all existing games, and add em all back\n        var gamesContainer = this.getGamesFilters();\n        gamesContainer.removeAll(true);\n        for (i=0, mlen=records.length; i < mlen; i++) {\n            game = records[i];\n            gameTime = game.get('gtime');\n            gameTime = Ext.Date.parse(gameTime, 'MS');\n            gameTime = Ext.Date.format(gameTime, 'g:i a');\n            alin = game.get('alin') ? '*' : '';\n            hlin = game.get('hlin') ? '*' : '';\n            gameString = this.getTeamCode(game.get('away')) + \n                alin + ' @' + this.getTeamCode(game.get('home')) + \n                hlin + ' ' + gameTime;\n            var gameId = game.get('gid');\n            var isChecked = isNewDate ? true : checkedGames[gameId] === 1; // true on first load of games list\n            gamesContainer.add(new Ext.form.field.Checkbox({\n                        boxLabel: gameString.toUpperCase(),\n                        name: 'game',\n                        checked: isChecked,\n                        inputValue: gameId\n                    }));\n        }\n        gamesContainer.add(Ext.create('Ext.Button', {\n            text: 'Apply Game Filters',\n            id: 'gamesGo'\n        }));\n    },\n    \n    /* a team id is the 3 character identifier used by mlb;\n    a team code is a more recognizeable 2-3 character identifier used at many sites */\n    getTeamCode: function(teamId) {\n        switch (teamId.toUpperCase())\n        {\n            case \"ANA\":\n                return \"laa\";\n            case \"CHA\":\n                return \"cws\";\n            case \"CHN\":\n                return \"chc\";\n            case \"KCA\":\n                return \"kc\";\n            case \"LAN\":\n                return \"lad\";\n            case \"NYA\":\n                return \"nyy\";\n            case \"NYN\":\n                return \"nym\";\n            case \"SDN\":\n                return \"sd\";\n            case \"SFN\":\n                return \"sf\";\n            case \"TBA\":\n                return \"tb\";\n            case \"WAS\":\n                return \"wsh\";\n            default:\n                return teamId.toLowerCase();\n        }\n    },\n    \n    onLaunch: function() {\n        var host = 'http://localhost:49533';\n        if (location.hostname.indexOf('cloudapp.net') > 0) {\n            host = 'http://dfst.cloudapp.net';  //live azure\n        }\n        \n        // Set things up to update filters when we switch sites\n        var siteDetailsStore = this.getSiteDetailsStore();\n        siteDetailsStore.proxy.url = host + '/api/site/';\n        siteDetailsStore.filter([{id:'siteId', property: 'siteId', value: 'fd'}]);\n        siteDetailsStore.on('load', this.onScoringChanged, this);\n        siteDetailsStore.load();\n        \n        // Set things up to update games filters when we switch sites\n        var gamesStore = this.getGamesStore();\n        gamesStore.proxy.url = host + '/api/games/';\n        gamesStore.on('load', this.onGamesChanged, this);\n        gamesStore.filter([{id:'gameDate', property: 'gameDate', value: (new Date()).toJSON()}]);\n        \n        // Set up a timer to update the games store periodically, so we can\n        // show a visual indicator that the lineup is ready\n        var task = {\n            run: function(){\n                var gamesStore = this.getGamesStore();\n                gamesStore.load();\n            },\n            scope: this,\n            interval: 1000 * 60 // every 60 seconds\n        };\n        Ext.TaskManager.start(task);        \n    }\n    \n});\n"]],"start1":0,"start2":0,"length1":0,"length2":20536}]],"length":20536}
{"contributors":[],"silentsave":false,"ts":1359302697920,"patch":[[{"diffs":[[0,"etStatsStore();\n"],[1,"        statsStore.filters.removeAtKey('team'); // clear all game filters\n"],[0,"        statsSto"]],"start1":4538,"start2":4538,"length1":32,"length2":106},{"diffs":[[0,"[{id:'gameDate',"],[1," sport: DFST.AppSettings.sport,"],[0," property: 'game"]],"start1":4796,"start2":4796,"length1":32,"length2":63},{"diffs":[[0,"    },\n    \n    "],[-1,"chan"],[0,"ge"],[1,"t"],[0,"Positions: funct"]],"start1":8557,"start2":8557,"length1":38,"length2":35},{"diffs":[[0,"ions"],[-1,": function(checkbox, newValue, oldValue, op"],[1,"FilterValue: func"],[0,"tion"],[-1,"s"],[1,"("],[0,") {\n"]],"start1":8581,"start2":8581,"length1":56,"length2":30},{"diffs":[[0,"  /*"],[-1,"\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        var statsStore = this.getStatsStore();"],[1," Return the value that will be sent to the server as the position\n        filter value, filter id = spos */"],[0,"\n   "]],"start1":8617,"start2":8617,"length1":372,"length2":115},{"diffs":[[0,"    "],[-1,"statsStore.filter([{id:'spos', property: 'spos', value: v"],[1,"return value;\n    },\n    \n    changePositions: function(checkbox, newValue, oldValue, options) {\n        /*\n        This next line shouldn't be needed work but is a work-around for the following bug, still not fixed in 4.1.0:\n        http://www.sencha.com/forum/showthread.php?171525-suspendEvents-did-not-affect-to-Ext.app.Controller.control                \n        */\n        if (checkbox.eventsSuspended) return;\n        \n        this.getStatsStore()\n            .filter([{id:'spos', property: 'spos', \n            value: this.getPositionsFilterV"],[0,"alue"],[1,"()"],[0,"}]);"]],"start1":9201,"start2":9201,"length1":69,"length2":563},{"diffs":[[0,"    {id:"],[-1," \""],[1,"'"],[0,"gameDate"],[-1,"\""],[1,"'"],[0,", proper"]],"start1":15830,"start2":15830,"length1":27,"length2":26},{"diffs":[[0,"ty: "],[-1,"\""],[1,"'"],[0,"gameDate"],[-1,"\""],[1,"'"],[0,", va"]],"start1":15856,"start2":15856,"length1":18,"length2":18},{"diffs":[[0,"    {id:"],[-1," "],[0,"'probabl"]],"start1":16001,"start2":16001,"length1":17,"length2":16},{"diffs":[[0,").value}"],[1,",\n            {id:'spos', property: 'spos', value: this.getPositionsFilterValue()}"],[0,"\n       "]],"start1":16076,"start2":16076,"length1":16,"length2":98}]],"length":20929,"saved":false}
{"ts":1359302721524,"patch":[[{"diffs":[[0,"[{id:'gameDate',"],[1," sport: DFST.AppSettings.sport,"],[0," property: 'game"]],"start1":20409,"start2":20409,"length1":32,"length2":63}]],"length":20960,"saved":false}
{"ts":1359303545248,"patch":[[{"diffs":[[0,"te',"],[-1," sport: DFST.AppSettings.sport,"],[0," pro"]],"start1":20421,"start2":20421,"length1":39,"length2":8},{"diffs":[[0,"ate()).toJSON()}"],[1,",\n                        "],[0,"]);\n        \n   "]],"start1":20461,"start2":20461,"length1":32,"length2":58}]],"length":20955,"saved":false}
{"ts":1359375611789,"patch":[[{"diffs":[[0,"');\n            "],[1,"//"],[0,"gameTime = Ext.D"]],"start1":17790,"start2":17790,"length1":32,"length2":34},{"diffs":[[0,"ime, 'MS');\n"],[1,"            gameTime = Ext.Date.parse(gameTime);\n"],[0,"            "]],"start1":17839,"start2":17839,"length1":24,"length2":73}]],"length":21164,"saved":false}
{"ts":1359375821758,"patch":[[{"diffs":[[0," gameTime = "],[-1,"Ext.Date.pars"],[1,"new Dat"],[0,"e(gameTime);"]],"start1":17862,"start2":17862,"length1":37,"length2":31}]],"length":21158,"saved":false}
{"ts":1359376717594,"patch":[[{"diffs":[[0,"meTime);"],[1," // this time is a utc time, but \n            var tzo = gameTime.getTimezoneOffset();\n            gameTime = Ext.Date.add(gameTime, Ext.Date.minute, tzo);"],[0,"\n       "]],"start1":17885,"start2":17885,"length1":16,"length2":170}]],"length":21312,"saved":false}
{"ts":1359376728043,"patch":[[{"diffs":[[0,"c time, "],[-1,"but"],[1,"so adjust:"],[0," \n      "]],"start1":17914,"start2":17914,"length1":19,"length2":26}]],"length":21319,"saved":false}
{"ts":1359377129307,"patch":[[{"diffs":[[0,"ate."],[-1,"minute"],[1,"DAY"],[0,", tzo"],[1,"/60"],[0,");\n "]],"start1":18037,"start2":18037,"length1":19,"length2":19}]],"length":21319,"saved":false}
{"ts":1359377231006,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"gameTime"]],"start1":17798,"start2":17798,"length1":18,"length2":16},{"diffs":[[0,"e = "],[-1,"Ext.Date.parse(gameTime, 'MS');\n            gameTime = new Date(gameTime); // this time is a utc time, so adjust"],[1,"new Date(gameTime); // this time is actually utc, but new Date treats\n            // it like local time, so add the timeoffset "],[0,": \n "]],"start1":17813,"start2":17813,"length1":120,"length2":135}]],"length":21332,"saved":false}
{"ts":1359377235548,"patch":[[{"diffs":[[0,"eTime); "],[1,"\n            "],[0,"// this "]],"start1":17829,"start2":17829,"length1":16,"length2":29}]],"length":21345,"saved":false}
{"ts":1359377334679,"patch":[[{"diffs":[[0,"ate."],[-1,"DAY"],[1,"MINUTE"],[0,", tzo"],[-1,"/60"],[0,");\n "]],"start1":18063,"start2":18063,"length1":19,"length2":19}]],"length":21345,"saved":false}
{"ts":1359377547588,"patch":[[{"diffs":[[0,"n(teamId) {\n"],[1,"        if (DFST.AppSettings.sport == \"mlb\") {\n    "],[0,"        swit"]],"start1":19156,"start2":19156,"length1":24,"length2":75},{"diffs":[[0,"        "],[1," "],[-1,"{\n"],[1,"   {\n    "],[0,"        "]],"start1":19257,"start2":19257,"length1":18,"length2":26},{"diffs":[[0,"                "],[1,"    "],[0,"return \"laa\";\n  "]],"start1":19299,"start2":19299,"length1":32,"length2":36},{"diffs":[[0,"a\";\n            "],[1,"  "],[1,"  "],[0,"case \"CHA\":\n    "]],"start1":19329,"start2":19329,"length1":32,"length2":36},{"diffs":[[0,"case \"CHA\":\n"],[1,"    "],[0,"            "]],"start1":19349,"start2":19349,"length1":24,"length2":28},{"diffs":[[0,"s\";\n            "],[1,"    "],[0,"case \"CHN\":\n    "]],"start1":19391,"start2":19391,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"return \"chc\";\n  "]],"start1":19423,"start2":19423,"length1":32,"length2":36},{"diffs":[[0,"turn \"chc\";\n"],[1,"    "],[0,"            "]],"start1":19445,"start2":19445,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"return \"kc\";\n   "]],"start1":19485,"start2":19485,"length1":32,"length2":36},{"diffs":[[0,"eturn \"kc\";\n"],[1,"    "],[0,"            "]],"start1":19506,"start2":19506,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"return \"lad\";\n  "]],"start1":19546,"start2":19546,"length1":32,"length2":36},{"diffs":[[0,"d\";\n            "],[1,"    "],[0,"case \"NYA\":\n    "]],"start1":19576,"start2":19576,"length1":32,"length2":36},{"diffs":[[0,"case \"NYA\":\n"],[1,"    "],[0,"            "]],"start1":19596,"start2":19596,"length1":24,"length2":28},{"diffs":[[0,"y\";\n            "],[1,"    "],[0,"case \"NYN\":\n    "]],"start1":19638,"start2":19638,"length1":32,"length2":36},{"diffs":[[0,"case \"NYN\":\n"],[1,"    "],[0,"            "]],"start1":19658,"start2":19658,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"case \"SDN\":\n"]],"start1":19704,"start2":19704,"length1":24,"length2":28},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"return \"sd\";\n   "]],"start1":19732,"start2":19732,"length1":32,"length2":36},{"diffs":[[0,"eturn \"sd\";\n"],[1,"    "],[0,"            "]],"start1":19753,"start2":19753,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"return \"sf\";\n   "]],"start1":19793,"start2":19793,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"case \"TBA\":\n"]],"start1":19826,"start2":19826,"length1":24,"length2":28},{"diffs":[[0,"case \"TBA\":\n"],[1,"    "],[0,"            "]],"start1":19842,"start2":19842,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"case \"WAS\":\n"]],"start1":19887,"start2":19887,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"return \"wsh\";\n  "]],"start1":19915,"start2":19915,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"default:"]],"start1":19953,"start2":19953,"length1":16,"length2":20},{"diffs":[[0,"efault:\n    "],[1,"                return teamId.toLowerCase();\n            }\n"],[0,"            "]],"start1":19966,"start2":19966,"length1":24,"length2":83}]],"length":21551,"saved":false}
{"ts":1359377606951,"patch":[[{"diffs":[[0,";\n            }\n"],[1,"        }\n"],[0,"            retu"]],"start1":20021,"start2":20021,"length1":32,"length2":42},{"diffs":[[0,"owerCase();\n"],[-1,"        }\n"],[0,"    },\n    \n"]],"start1":20076,"start2":20076,"length1":34,"length2":24}]],"length":21551,"saved":false}
{"ts":1359377609541,"patch":[[{"diffs":[[0,"      }\n        "],[-1,"    "],[0,"return teamId.to"]],"start1":20039,"start2":20039,"length1":36,"length2":32}]],"length":21547,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359826374765,"patch":[[{"diffs":[[0,"wValue.toJSON()}"],[-1,""],[0,""],[1,",\n                           {id: 'sport', property: 'sport', value: DFST.AppSettings.sport}"],[0,"]);\n    },\n    \n"]],"start1":4875,"start2":4875,"length1":32,"length2":124},{"diffs":[[0,"ilter([{id:'site"],[-1,"Id"],[1,"Abb"],[0,"', property: 'si"]],"start1":12571,"start2":12571,"length1":34,"length2":35},{"diffs":[[0," property: 'site"],[-1,"Id"],[1,"Abb"],[0,"', value: radiob"]],"start1":12592,"start2":12592,"length1":34,"length2":35},{"diffs":[[0,"et('site"],[-1,"Id"],[1,"Abb"],[0,"')},\n   "]],"start1":16072,"start2":16072,"length1":18,"length2":19},{"diffs":[[0,"        "],[-1,"//"],[0,""],[1,""],[0,"gameTime"]],"start1":18088,"start2":18088,"length1":18,"length2":16},{"diffs":[[0,"                "],[1,"    "],[0,"return \"cws\";\n  "]],"start1":19364,"start2":19364,"length1":32,"length2":36},{"diffs":[[0,"case \"CHN\":\n"],[-1,"    "],[0,"            "]],"start1":19414,"start2":19414,"length1":28,"length2":24},{"diffs":[[0,"            "],[1,"    "],[0,"case \"SDN\":\n"]],"start1":19707,"start2":19707,"length1":24,"length2":28},{"diffs":[[0,"case \"SDN\":\n"],[1,"    "],[0,"            "]],"start1":19723,"start2":19723,"length1":24,"length2":28},{"diffs":[[0,"            "],[-1,"    "],[0,""],[1,""],[0,"case \"TBA\":\n"]],"start1":19833,"start2":19833,"length1":28,"length2":24},{"diffs":[[0,"                "],[-1,"    "],[0,""],[1,""],[0,"return \"wsh\";\n  "]],"start1":19922,"start2":19922,"length1":36,"length2":32},{"diffs":[[0,"y: 'site"],[-1,"Id"],[1,"Abb"],[0,"', value"]],"start1":20547,"start2":20547,"length1":18,"length2":19},{"diffs":[[0,"                "],[-1,""],[0,""],[1,"   {id: 'sport', property: 'sport', value: DFST.AppSettings.sport}"],[0,"]);\n        \n   "]],"start1":21017,"start2":21017,"length1":32,"length2":98}]],"length":21551,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359826723530,"patch":[[{"diffs":[[0," property: 'site"],[-1,"Abb"],[1,"Id"],[0,"', value: 'fd'}]"]],"start1":20539,"start2":20539,"length1":35,"length2":34},{"diffs":[[0,"e: '"],[-1,"fd"],[1,"2"],[0,"'}])"]],"start1":20564,"start2":20564,"length1":10,"length2":9}]],"length":21549,"saved":false}
{"ts":1359826890187,"patch":[[{"diffs":[[0,"id:'site"],[-1,"Abb"],[1,"Id"],[0,"', prope"]],"start1":12579,"start2":12579,"length1":19,"length2":18},{"diffs":[[0,"y: 'site"],[-1,"Abb"],[1,"Id"],[0,"', value"]],"start1":12599,"start2":12599,"length1":19,"length2":18},{"diffs":[[0,"site"],[-1,"Abb"],[1,"Id"],[0,"')},"]],"start1":16074,"start2":16074,"length1":11,"length2":10}]],"length":21546,"saved":false}
{"ts":1359829199185,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"var team1 = this"]],"start1":3389,"start2":3389,"length1":32,"length2":34},{"diffs":[[0,"            "],[1,"//"],[0,"var team2 = "]],"start1":3467,"start2":3467,"length1":24,"length2":26},{"diffs":[[0," += "],[-1,"team1 + \":\" + team2"],[1,"gameId"],[0,";\n  "]],"start1":3558,"start2":3558,"length1":27,"length2":14}]],"length":21537,"saved":false}
{"ts":1359829319646,"patch":[[{"diffs":[[0,"r([{id:'"],[-1,"team"],[1,"gameId"],[0,"', prope"]],"start1":3807,"start2":3807,"length1":20,"length2":22},{"diffs":[[0,"perty: '"],[-1,"team"],[1,"gameId"],[0,"', value"]],"start1":3827,"start2":3827,"length1":20,"length2":22}]],"length":21541,"saved":false}
{"ts":1359829343820,"patch":[[{"diffs":[[0,"eAtKey('"],[-1,"team"],[1,"gameId"],[0,"');\n    "]],"start1":3713,"start2":3713,"length1":20,"length2":22}]],"length":21543,"saved":false}
{"ts":1359829453297,"patch":[[{"diffs":[[0,"eAtKey('"],[-1,"team"],[1,"gameId"],[0,"'); // c"]],"start1":4583,"start2":4583,"length1":20,"length2":22}]],"length":21545,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360237929110,"patch":[[{"diffs":[[0,"DetailsStore();\n"],[1,"            var sportId = DFST.AppSettings.sport == \"NBA\" ? 4 : 2;\n"],[0,"            site"]],"start1":12524,"start2":12524,"length1":32,"length2":99}]],"length":21612,"saved":false}
{"ts":1360237975403,"patch":[[{"diffs":[[0,"lsStore.filter(["],[1,"\n                "],[0,"{id:'siteId', pr"]],"start1":12628,"start2":12628,"length1":32,"length2":49},{"diffs":[[0,".inputValue}"],[1,",\n                {id:'sportId', property: 'sportId', value: sportId}\n                "],[0,"]);\n        "]],"start1":12713,"start2":12713,"length1":24,"length2":110}]],"length":21715,"saved":false}
{"ts":1360238030125,"patch":[[{"diffs":[[0,"ore.filter(["],[1,"\n            "],[0,"{id:'siteId'"]],"start1":20680,"start2":20680,"length1":24,"length2":37},{"diffs":[[0,"ue: '2'}"],[1,",\n            {id:'sportId', property: 'sportId', value: '4'}\n            "],[0,"]);\n    "]],"start1":20742,"start2":20742,"length1":16,"length2":90}]],"length":21802,"saved":false}
{"ts":1360238172546,"patch":[[{"diffs":[[0,"== \""],[-1,"NBA"],[1,"mlb"],[0,"\" ? "],[-1,"4 : 2"],[1,"2 : 4"],[0,";\n  "]],"start1":12589,"start2":12589,"length1":20,"length2":20}]],"length":21802,"saved":false}
{"ts":1360239408001,"patch":[[{"diffs":[[0,"    var "],[-1,"sport"],[1,"dfsGame"],[0,"Id = DFS"]],"start1":12548,"start2":12548,"length1":21,"length2":23},{"diffs":[[0,"\" ? "],[-1,"2 : 4"],[1,"1 : 1"],[0,";\n  "]],"start1":12598,"start2":12598,"length1":13,"length2":13},{"diffs":[[0,"           {id:'"],[-1,"sport"],[1,"dfsGame"],[0,"Id', property: '"]],"start1":12734,"start2":12734,"length1":37,"length2":39},{"diffs":[[0,"Id', property: '"],[-1,"sport"],[1,"dfsGame"],[0,"Id', value: spor"]],"start1":12757,"start2":12757,"length1":37,"length2":39},{"diffs":[[0," value: "],[-1,"sport"],[1,"dfsGame"],[0,"Id}\n    "]],"start1":12784,"start2":12784,"length1":21,"length2":23},{"diffs":[[0,"   {id:'"],[-1,"sport"],[1,"dfsGame"],[0,"Id', pro"]],"start1":20769,"start2":20769,"length1":21,"length2":23},{"diffs":[[0,"perty: '"],[-1,"sport"],[1,"dfsGame"],[0,"Id', val"]],"start1":20792,"start2":20792,"length1":21,"length2":23},{"diffs":[[0,"value: '"],[-1,"4"],[1,"1"],[0,"'}\n     "]],"start1":20812,"start2":20812,"length1":17,"length2":17}]],"length":21814,"saved":false}
{"ts":1360246023557,"patch":[[{"diffs":[[0,"s ready\n"],[1,"        if (DFST.AppSettings.sport == \"mlb\")\n        {\n    "],[0,"        "]],"start1":21503,"start2":21503,"length1":16,"length2":75},{"diffs":[[0,"ask = {\n"],[1,"    "],[0,"        "]],"start1":21583,"start2":21583,"length1":16,"length2":20},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"var gamesStore ="]],"start1":21624,"start2":21624,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"gamesStore.load("]],"start1":21683,"start2":21683,"length1":32,"length2":36},{"diffs":[[0,"();\n            "],[1,"    "],[0,"},\n            s"]],"start1":21718,"start2":21718,"length1":32,"length2":36},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"scope: t"]],"start1":21745,"start2":21745,"length1":16,"length2":20},{"diffs":[[0,": this,\n"],[1,"    "],[0,"        "]],"start1":21762,"start2":21762,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"    "],[0,"};\n     "]],"start1":21826,"start2":21826,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"Ext.Task"]],"start1":21841,"start2":21841,"length1":16,"length2":20},{"diffs":[[0,"k);        \n"],[1,"        }\n"],[0,"    }\n    \n}"]],"start1":21878,"start2":21878,"length1":24,"length2":34}]],"length":21915,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360412270425,"patch":[[{"diffs":[[0,"bel: pos"],[1,".name"],[0,",\n      "]],"start1":13446,"start2":13446,"length1":16,"length2":21},{"diffs":[[0,"lue: pos"],[1,".id"],[0,"\n       "]],"start1":13568,"start2":13568,"length1":16,"length2":19}]],"length":21923,"saved":false}
{"ts":1360413736475,"patch":[[{"diffs":[[0,"d = "],[-1,"s"],[0,"pos"],[-1," "],[1,"Id"],[0,"*/\n "]],"start1":8808,"start2":8808,"length1":13,"length2":13}]],"length":21923,"saved":false}
{"ts":1360413749656,"patch":[[{"diffs":[[0,"ilter([{id:'"],[-1,"s"],[0,"pos"],[1,"Id"],[0,"', property:"]],"start1":9764,"start2":9764,"length1":28,"length2":29},{"diffs":[[0,"perty: '"],[-1,"s"],[0,"pos"],[1,"Id"],[0,"', \n    "]],"start1":9787,"start2":9787,"length1":20,"length2":21}]],"length":21925,"saved":false}
{"ts":1360413766697,"patch":[[{"diffs":[[0,"   {id:'"],[-1,"s"],[0,"pos"],[1,"Id"],[0,"', prope"]],"start1":16374,"start2":16374,"length1":20,"length2":21},{"diffs":[[0,"y: '"],[-1,"s"],[0,"pos"],[1,"Id"],[0,"', v"]],"start1":16397,"start2":16397,"length1":12,"length2":13}]],"length":21927,"saved":false}
{"ts":1360416980290,"patch":[[{"diffs":[[0,"value: '"],[-1,"1"],[1,"2"],[0,"'}\n     "]],"start1":20824,"start2":20824,"length1":17,"length2":17}]],"length":21927,"saved":false}
{"ts":1360417174971,"patch":[[{"diffs":[[0,"\" ? "],[-1,"1"],[1,"2"],[0," :"],[1," 2;//def.fd game\n            //TODO: siteDetails store should only need to filter by gameId\n            var siteId = radiobutton.inputValue;\n            if (siteId == 5) dfsGameId ="],[0," 1;\n"]],"start1":12600,"start2":12600,"length1":11,"length2":192}]],"length":22108,"saved":false}
{"ts":1360417346469,"patch":[[{"diffs":[[0,"te.get('"],[-1,"sit"],[1,"dfsGam"],[0,"eId')},\n"]],"start1":16434,"start2":16434,"length1":19,"length2":22}]],"length":22111,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360514859123,"patch":[[{"diffs":[[0,"sGameId = 1;"],[1," //buzzdraft\n            if (siteId == 1) dfsGameId = 3; //dk"],[0,"\n           "]],"start1":12779,"start2":12779,"length1":24,"length2":85}]],"length":22172,"saved":false}
{"ts":1360515509336,"patch":[[{"diffs":[[0,"ndexOf('"],[-1,"cloudapp.net"],[1,"azurewebites"],[0,"') > 0) "]],"start1":20633,"start2":20633,"length1":28,"length2":28}]],"length":22172,"saved":false}
{"ts":1360515555704,"patch":[[{"diffs":[[0,"azureweb"],[1,"s"],[0,"ites') >"]],"start1":20641,"start2":20641,"length1":16,"length2":17}]],"length":22173,"saved":false}
{"ts":1360516427161,"patch":[[{"diffs":[[0,"p://dfst"],[1,"api"],[0,".cloudap"]],"start1":20687,"start2":20687,"length1":16,"length2":19}]],"length":22176,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360754040050,"patch":[[{"diffs":[[0,"3; //dk\n"],[1,"            if (siteId == 6) dfsGameId = 6; //dj\n"],[0,"        "]],"start1":12845,"start2":12845,"length1":16,"length2":65}]],"length":22225,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365675536321,"patch":[[{"diffs":[[0,"ue;\n            "],[1,"//"],[0,"if (siteId == 5)"]],"start1":12744,"start2":12744,"length1":32,"length2":34}]],"length":22227,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365941520020,"patch":[[{"diffs":[[0,"\"mlb\" ? "],[1,"10"],[0,"2 : 2;//"]],"start1":12596,"start2":12596,"length1":16,"length2":18}]],"length":22229,"saved":false}
{"ts":1365941902676,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        var defaultGameId = 2;\n        if (AppSettings.sport == \"mlb\") defaultGameId = 102;\n"],[0,"        // Set t"]],"start1":20784,"start2":20784,"length1":32,"length2":124}]],"length":22321,"saved":false}
{"ts":1365941926782,"patch":[[{"diffs":[[0,"    if ("],[1,"DFST."],[0,"AppSetti"]],"start1":20835,"start2":20835,"length1":16,"length2":21}]],"length":22326,"saved":false}
{"ts":1365941934707,"patch":[[{"diffs":[[0," value: "],[-1,"'2'"],[1,"defaultGameId"],[0,"}\n      "]],"start1":21222,"start2":21222,"length1":19,"length2":29}]],"length":22336,"saved":false}
{"contributors":[],"silentsave":false,"ts":1370698715136,"patch":[[{"diffs":[[0,"Id ="],[-1," DFST.AppSettings.sport == \"mlb\" ? 102 :"],[0," 2;//def"],[-1,"."],[1,"ault "],[0,"fd g"]],"start1":12565,"start2":12565,"length1":57,"length2":21},{"diffs":[[0,"ue;\n"],[-1,"            //if (siteId == 5) dfsGameId = 1; //buzzdraft\n"],[0,"    "]],"start1":12710,"start2":12710,"length1":66,"length2":8},{"diffs":[[0,"6; //dj\n"],[1,"            if (DFST.AppSettings.sport == \"mlb\") dfsGameId += 100;\n"],[0,"        "]],"start1":12804,"start2":12804,"length1":16,"length2":83}]],"length":22309,"saved":false}
{"ts":1370711654512,"patch":[[{"diffs":[[0,"ameId = "],[-1,"3"],[1,"1"],[0,"; //dk\n "]],"start1":12747,"start2":12747,"length1":17,"length2":17}]],"length":22309,"saved":false}
{"ts":1370719135760,"patch":[[{"diffs":[[0,"From"],[-1,"Checkboxes = gameCheckboxes[0].inputValue"],[1,"Server = records[0].get('gtime')"],[0,".sub"]],"start1":17466,"start2":17466,"length1":49,"length2":40},{"diffs":[[0,"g(0,"],[1," "],[0,"10)"],[1,".replace(/-/g,'_')"],[0,";\n  "]],"start1":17511,"start2":17511,"length1":11,"length2":30},{"diffs":[[0,"DateFrom"],[-1,"Checkboxes"],[1,"Server"],[0,") {\n    "]],"start1":17582,"start2":17582,"length1":26,"length2":22}]],"length":22315,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371465791914,"patch":[[{"diffs":[[1,"\n"],[0,"Ext.define('"]],"start1":0,"start2":0,"length1":12,"length2":13}]],"length":22316,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372000385918,"patch":[[{"diffs":[[0,"oxes[i];"],[-1,"                "],[0,"\n"],[1,""],[0,"        "]],"start1":10838,"start2":10838,"length1":33,"length2":17},{"diffs":[[0,"f (checkbox."],[-1,"inputValue"],[1,"boxLabel"],[0," === 'P' || "]],"start1":10911,"start2":10911,"length1":34,"length2":32},{"diffs":[[0,"heckbox."],[-1,"inputValue"],[1,"boxLabel"],[0," === 'SP"]],"start1":10944,"start2":10944,"length1":26,"length2":24},{"diffs":[[0," = checkbox."],[-1,"inputValue"],[1,"boxLabel"],[0,";\n          "]],"start1":11409,"start2":11409,"length1":34,"length2":32},{"diffs":[[0,"heckbox."],[-1,"inputValue"],[1,"boxLabel"],[0,";\n      "]],"start1":11955,"start2":11955,"length1":26,"length2":24},{"diffs":[[0,"ful, options) {\n"],[1,"        if (records)\n"],[0,"        if (reco"]],"start1":16779,"start2":16779,"length1":32,"length2":53}]],"length":22313,"saved":false}
{"ts":1372072828246,"patch":[[{"diffs":[[0,"on() {\n        \n"],[1,"        //local variables\n        this.gameDateIsChanging = false;\n        \n"],[0,"        this.con"]],"start1":1150,"start2":1150,"length1":32,"length2":108},{"diffs":[[0,"lue, options) {\n"],[1,"        this.gameDateIsChanging = false;        \n"],[0,"        var stat"]],"start1":4565,"start2":4565,"length1":32,"length2":81},{"diffs":[[0,"     if "],[1,"(this.gameDatIsChanging) {\n            //if "],[0,"(gameDat"]],"start1":17669,"start2":17669,"length1":16,"length2":60}]],"length":22482,"saved":false}
{"ts":1372072842184,"patch":[[{"diffs":[[0,"Changing) {\n"],[1,"                this.gameDateIsChanging = false;\n"],[0,"            "]],"start1":17692,"start2":17692,"length1":24,"length2":73}]],"length":22531,"saved":false}
{"ts":1372072906293,"patch":[[{"diffs":[[0,") {\n"],[-1,"        if (records)\n"],[0,"    "]],"start1":16916,"start2":16916,"length1":29,"length2":8}]],"length":22510,"saved":false}
{"ts":1372073198475,"patch":[[{"diffs":[[0,"g = "],[-1,"false;        "],[1,"true;"],[0,"\n   "]],"start1":4611,"start2":4611,"length1":22,"length2":13}]],"length":22501,"saved":false}
{"ts":1372073302763,"patch":[[{"diffs":[[0,".gameDat"],[1,"e"],[0,"IsChangi"]],"start1":17652,"start2":17652,"length1":16,"length2":17}]],"length":22502,"saved":false}
{"ts":1372073468056,"patch":[[{"diffs":[[0,"    "],[-1,"var gameDateFromFilter = Ext.Date.format(this.getDateFilter().value, 'Y_m_d');\n            var gameDateFromServer = records[0].get('gtime').substring(0, 10).replace(/-/g,'_');"],[1,"if (this.gameDateIsChanging) {"],[0,"\n   "]],"start1":17452,"start2":17452,"length1":183,"length2":38},{"diffs":[[0,") {\n            "],[-1,"if ("],[1,"    "],[0,"this.gameDateIsC"]],"start1":17483,"start2":17483,"length1":36,"length2":36},{"diffs":[[0,"meDateIsChanging"],[-1,") {"],[1," = false;"],[0,"\n               "]],"start1":17510,"start2":17510,"length1":35,"length2":41},{"diffs":[[0,"    "],[-1,"this.gameDateIsChanging = false;\n            //if (gameDateFromFilter === gameDateFromServer)"],[1,"isNewDate = true;\n            } else"],[0," {\n "]],"start1":17548,"start2":17548,"length1":101,"length2":44},{"diffs":[[0,"   for ("],[-1,"var "],[0,"i = 0; i"]],"start1":17604,"start2":17604,"length1":20,"length2":16},{"diffs":[[0,"fals"],[-1,"e;\n            } else {\n                isNewDate = tru"],[0,""],[1,""],[0,"e;\n "]],"start1":17868,"start2":17868,"length1":63,"length2":8}]],"length":22247,"saved":false}
{"ts":1372073771505,"patch":[[{"diffs":[[1,"/*global Ext*/"],[0,"\nExt.def"]],"start1":0,"start2":0,"length1":8,"length2":22}]],"length":22261,"saved":false}
{"ts":1372073783875,"patch":[[{"diffs":[[0,"obal Ext"],[1,", DFST"],[0,"*/\nExt.d"]],"start1":4,"start2":4,"length1":16,"length2":22}]],"length":22267,"saved":false}
{"ts":1372073828820,"patch":[[{"diffs":[[0,"        return;\n"],[1,"        /*\n"],[0,"        var stat"]],"start1":6915,"start2":6915,"length1":32,"length2":43},{"diffs":[[0,"turn;\n        }\n"],[1,"        */\n"],[0,"    },\n    \n    "]],"start1":7283,"start2":7283,"length1":32,"length2":43}]],"length":22289,"saved":false}
{"ts":1372073882706,"patch":[[{"diffs":[[0,"   }"],[-1,"/*, use a go button to change the filter on games, instead of this\n            'filterlist fieldcontainer#games checkbox':{\n                change: this.changeGames\n            }*/ "],[0,"    "]],"start1":2366,"start2":2366,"length1":189,"length2":8}]],"length":22108,"saved":false}
{"ts":1372073947421,"patch":[[{"diffs":[[0,"es\n            }"],[1,"/*, use a go button to change the filter on games, instead of this\n            'filterlist fieldcontainer#games checkbox':{\n                change: this.changeGames\n            }*/ "],[0,"         \n      "]],"start1":2354,"start2":2354,"length1":32,"length2":213}]],"length":22289,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374146165151,"patch":[[{"diffs":[[0,"     \n*/"],[1,"\n        // clear the selection in the top grid\n        // 6/29/13 - kludge because of extjs behavior change introduced in 4.2.1\n"],[0,"        "]],"start1":16175,"start2":16175,"length1":16,"length2":145},{"diffs":[[0," if (records"],[-1,".length"],[0," === "],[-1,"0"],[1,"null"],[0,") return;\n  "]],"start1":17089,"start2":17089,"length1":37,"length2":33}]],"length":22414,"saved":false}
{"ts":1374146264134,"patch":[[{"diffs":[[0," }));\n        }\n"],[1,"        if (records.length > 0) {\n    "],[0,"        gamesCon"]],"start1":19389,"start2":19389,"length1":32,"length2":70},{"diffs":[[0,"        "],[1,"    "],[0,"text: 'A"]],"start1":19501,"start2":19501,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"   "],[1," "],[0,"id: 'gam"]],"start1":19545,"start2":19545,"length1":16,"length2":20},{"diffs":[[0,"Go'\n        "],[-1,"}));"],[1,"    }));\n        }"],[0,"\n    },\n    "]],"start1":19567,"start2":19567,"length1":28,"length2":42}]],"length":22474,"saved":false}
{"ts":1374146319880,"patch":[[{"diffs":[[0,"games'}\n"],[1,"\n"],[0,"    ],\n "]],"start1":982,"start2":982,"length1":16,"length2":17}]],"length":22475,"saved":false}
{"ts":1374146348716,"patch":[[{"diffs":[[0,"#games'}"],[-1,"\n"],[1,",\n        { ref: 'weatherdisplay', selector: 'weatherdisplay' }"],[0,"\n    ],\n"]],"start1":981,"start2":981,"length1":17,"length2":79}]],"length":22537,"saved":false}
{"ts":1374146354871,"patch":[[{"diffs":[[0,"       {"],[-1," "],[0,"ref: 'we"]],"start1":992,"start2":992,"length1":17,"length2":16},{"diffs":[[0,"display'"],[-1," "],[0,"}\n    ],"]],"start1":1041,"start2":1041,"length1":17,"length2":16}]],"length":22535,"saved":false}
{"ts":1374146391310,"patch":[[{"diffs":[[0,"           }));\n"],[1,"        } else {\n            this.getWeatherdisplay().hide();\n"],[0,"        }\n    },"]],"start1":19633,"start2":19633,"length1":32,"length2":94}]],"length":22597,"saved":false}
{"ts":1374146519926,"patch":[[{"diffs":[[0,"er#games'},\n"],[1,"        {ref: 'drilldowndetails',  selector: 'drilldowndetails'},\n"],[0,"        {ref"]],"start1":979,"start2":979,"length1":24,"length2":90}]],"length":22663,"saved":false}
{"ts":1374146555708,"patch":[[{"diffs":[[0,"y().hide();\n"],[1,"            this.getDrilldowndetails().hide();\n"],[0,"        }\n  "]],"start1":19765,"start2":19765,"length1":24,"length2":71}]],"length":22710,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374408350807,"patch":[[{"diffs":[[0," Ext"],[-1,", DFST"],[1,": false, DFST: false"],[0,"*/\nE"]],"start1":8,"start2":8,"length1":14,"length2":28}]],"length":22724,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375557827024,"patch":[[{"diffs":[[0,"teId == "],[-1,"6"],[1,"4"],[0,") dfsGam"]],"start1":13057,"start2":13057,"length1":17,"length2":17},{"diffs":[[0,"d = "],[-1,"6"],[1,"4"],[0,"; //d"],[-1,"j"],[1,"d"],[0,"\n   "]],"start1":13076,"start2":13076,"length1":15,"length2":15}]],"length":22724,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375783871387,"patch":[[{"diffs":[[0,"+= 100;\n"],[1,"            if (DFST.AppSettings.sport == \"nfl\") dfsGameId += 200;\n"],[0,"        "]],"start1":13147,"start2":13147,"length1":16,"length2":83}]],"length":22791,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376487626947,"patch":[[{"diffs":[[0,"atefield'},\n"],[1,"        {ref: 'weekFilter', selector: 'filterlist combobox'},\n"],[0,"        {ref"]],"start1":293,"start2":293,"length1":24,"length2":86},{"diffs":[[0,"\n            },\n"],[1,"            'filterlist combobox':{\n                change: this.changeWeek\n            },\n"],[0,"            'fil"]],"start1":1564,"start2":1564,"length1":32,"length2":123},{"diffs":[[0,"port}]);\n    },\n"],[1,"\n"],[0,"    "],[1,"changeWeek: function(combobox, newValue, oldValue, options) {\n        this.gameDateIsChanging = true;\n        var statsStore = this.getStatsStore();\n        statsStore.filters.removeAtKey('gameId'); // clear all game filters\n        var weekRecord = combobox.findRecordByValue(newValue);\n        var gameDateStart = weekRecord.get('startdate');\n        var gameDateEnd = weekRecord.get('enddate');\n        statsStore.filter([{id: 'gameDate', property: 'gameDate', value: gameDateStart.toJSON()}]);\n        var gamesStore = this.getGamesStore();\n        gamesStore.filter([{id:'gameDate', sport: DFST.AppSettings.sport, property: 'gameDate', value: gameDateStart.toJSON()},\n                           {id: 'sport', property: 'sport', value: DFST.AppSettings.sport}]);\n    },\n"],[0,"\n    changeProba"]],"start1":5408,"start2":5408,"length1":36,"length2":811},{"diffs":[[0,"               \n"],[1,"        var gameDate = new Date();\n        var dateFilter = this.getDateFilter();\n        var weekFilter = this.getWeekFilter();\n        if (dateFilter) {\n            gameDate = dateFilter.value;\n        } else {\n            gameDate = weekFilter.findRecordByValue(weekFilter.value).get('startdate');\n        }\n"],[0,"        statsSto"]],"start1":17725,"start2":17725,"length1":32,"length2":343},{"diffs":[[0,"ue: "],[-1,"this.getDateFilter().valu"],[1,"gameDat"],[0,"e.to"]],"start1":18133,"start2":18133,"length1":33,"length2":15},{"diffs":[[0," \"mlb\") "],[1,"\n            "],[0,"defaultG"]],"start1":22544,"start2":22544,"length1":16,"length2":29},{"diffs":[[0," = 102;\n"],[1,"        else if (DFST.AppSettings.sport == \"nfl\")\n            defaultGameId = 202;\n"],[0,"        "]],"start1":22578,"start2":22578,"length1":16,"length2":99}]],"length":24108,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376570757651,"patch":[[{"diffs":[[0,"esStore.filter(["],[1,"\n            "],[0,"{id:'gameDate', "]],"start1":5985,"start2":5985,"length1":32,"length2":45},{"diffs":[[0,"te',"],[-1," sport: DFST.AppSettings.sport,"],[0," pro"]],"start1":6025,"start2":6025,"length1":39,"length2":8},{"diffs":[[0,")},\n            "],[-1,"   "],[1,"{id:'gameDateLast', property: 'gameDateLast', value: gameDateEnd.toJSON()},\n"],[0,"            {id:"]],"start1":6080,"start2":6080,"length1":35,"length2":108},{"diffs":[[0,"pSettings.sport}"],[1,"\n        "],[0,"]);\n    },\n\n    "]],"start1":6231,"start2":6231,"length1":32,"length2":41}]],"length":24172,"saved":false}
{"ts":1376572268478,"patch":[[{"diffs":[[0,"ter.value).get('"],[-1,"start"],[1,"end"],[0,"date');\n        "]],"start1":18559,"start2":18559,"length1":37,"length2":35}]],"length":24415,"saved":false}
{"ts":1376572333322,"patch":[[{"diffs":[[0,"var "],[-1,"gameDate"],[1,"weekRecord"],[0," ="],[1," "],[0," wee"]],"start1":18321,"start2":18321,"length1":18,"length2":21},{"diffs":[[0,"ilter.value)"],[1,";\n            var gameDate = weekRecord"],[0,".get('startd"]],"start1":18373,"start2":18373,"length1":24,"length2":63},{"diffs":[[0,"ue: "],[-1,"gameDate.toJSON()});\n            var gameDateLast = weekFilter.findRecordByValue(weekFilter.value).get('enddate'"],[1,"weekRecord.get('startdate').toJSON()}"],[0,");\n "]],"start1":18509,"start2":18509,"length1":120,"length2":45},{"diffs":[[0," value: "],[-1,"gameDateLast"],[1,"weekRecord.get('enddate')"],[0,".toJSON("]],"start1":18623,"start2":18623,"length1":28,"length2":41}]],"length":24395,"saved":false}
{"ts":1376572345051,"patch":[[{"diffs":[[0,"e);\n"],[-1,"            var gameDate = weekRecord.get('startdate');\n"],[0,"    "]],"start1":18383,"start2":18383,"length1":64,"length2":8}]],"length":24339,"saved":false}
{"ts":1376572440296,"patch":[[{"diffs":[[0,"\n*/\n"],[-1,"        // clear the selection in the top grid\n        // 6/29/13 - kludge because of extjs behavior change introduced in 4.2.1\n"],[1,"/*"],[0,"    "]],"start1":17349,"start2":17349,"length1":136,"length2":10},{"diffs":[[0,"r(filters);\n"],[1,"*/\n"],[0,"    },\n    \n"]],"start1":18521,"start2":18521,"length1":24,"length2":27}]],"length":24216,"saved":false}
{"ts":1376572600355,"patch":[[{"diffs":[[0,"rs);\n*/\n"],[1,"        var dateFilter = this.getDateFilter();\n        if (dateFilter) {\n            this.changeDate(dateFilter, dateFilter.value);\n            //    changeDate: function(datefield, newValue, oldValue, options) {\n\n        } else {\n            var weekFilter = this.getWeekFilter();\n        }\n"],[0,"    },\n "]],"start1":18528,"start2":18528,"length1":16,"length2":308}]],"length":24508,"saved":false}
{"ts":1376572768086,"patch":[[{"diffs":[[0,"    \n*/\n"],[-1,"/*        \n"],[0,"        "]],"start1":17345,"start2":17345,"length1":27,"length2":16},{"diffs":[[0,"   \n        "],[-1,"var "],[1,"statsStore."],[0,"filters = [\n"]],"start1":17633,"start2":17633,"length1":28,"length2":35},{"diffs":[[0,"     ];\n"],[1,"/*"],[0,"\n"],[-1,""],[0,"        "]],"start1":17930,"start2":17930,"length1":17,"length2":19},{"diffs":[[0,"e').toJSON()});\n"],[-1,""],[0,"        }\n      "]],"start1":18469,"start2":18469,"length1":32,"length2":32},{"diffs":[[0,"()});\n        }\n"],[1,"        \n"],[0,"        statsSto"]],"start1":18479,"start2":18479,"length1":32,"length2":41}]],"length":24515,"saved":false}
{"ts":1376572966024,"patch":[[{"diffs":[[0,".filters"],[-1," = "],[1,".addAll("],[0,"[\n      "]],"start1":17655,"start2":17655,"length1":19,"length2":24},{"diffs":[[0,"        "],[-1,"    "],[0,"]"],[1,")"],[0,";\n/*\n   "]],"start1":17928,"start2":17928,"length1":21,"length2":18}]],"length":24517,"saved":false}
{"ts":1376573247258,"patch":[[{"diffs":[[0,"]);\n"],[-1,"/*\n        var dateFilter = this.getDateFilter();\n        if (dateFilter) {\n            filters.push({id:'gameDate', property: 'gameDate', value: dateFilter.value.toJSON()});\n        } else {\n            var weekFilter = this.getWeekFilter();\n            var weekRecord =  weekFilter.findRecordByValue(weekFilter.value);\n            filters.push({id:'gameDate', property: 'gameDate', value: weekRecord.get('startdate').toJSON()});\n            filters.push({id:'gameDateLast', property: 'gameDateLast', value: weekRecord.get('enddate').toJSON()});\n        }\n        \n        statsStore.filter(filters);\n*/\n"],[0,"    "]],"start1":17936,"start2":17936,"length1":613,"length2":8}]],"length":23912,"saved":false}
{"ts":1376573263511,"patch":[[{"diffs":[[0,"()}\n        ]);\n"],[1,"/*\n        var dateFilter = this.getDateFilter();\n        if (dateFilter) {\n            filters.push({id:'gameDate', property: 'gameDate', value: dateFilter.value.toJSON()});\n        } else {\n            var weekFilter = this.getWeekFilter();\n            var weekRecord =  weekFilter.findRecordByValue(weekFilter.value);\n            filters.push({id:'gameDate', property: 'gameDate', value: weekRecord.get('startdate').toJSON()});\n            filters.push({id:'gameDateLast', property: 'gameDateLast', value: weekRecord.get('enddate').toJSON()});\n        }\n        \n        statsStore.filter(filters);\n*/\n"],[0,"        var date"]],"start1":17924,"start2":17924,"length1":32,"length2":637}]],"length":24517,"saved":false}
{"ts":1376573360945,"patch":[[{"diffs":[[0,"etWeekFilter();\n"],[1,"            this.changeWeek(weekFilter, weekFilter.value);\n"],[0,"        }\n    },"]],"start1":18811,"start2":18811,"length1":32,"length2":91}]],"length":24576,"saved":false}
{"ts":1376573541518,"patch":[[{"diffs":[[0,"/ re"],[-1,"fresh"],[1,"set"],[0," pla"]],"start1":17362,"start2":17362,"length1":13,"length2":11},{"diffs":[[0,"er store"],[1," filters"],[0,"\n       "]],"start1":17374,"start2":17374,"length1":16,"length2":24},{"diffs":[[0,"    ]);\n"],[-1,"/*"],[0,"\n       "]],"start1":17938,"start2":17938,"length1":18,"length2":16},{"diffs":[[0,"    "],[-1,"var dateFilter = this.getDateFilter();\n        if (dateFilter) {\n            filters.push({id:'gameDate', property: 'gameDate', value: dateFilter.value.toJSON()});\n        } else {\n            var weekFilter = this.getWeekFilter();\n            var weekRecord =  weekFilter.findRecordByValue(weekFilter.value);\n            filters.push({id:'gameDate', property: 'gameDate', value: weekRecord.get('startdate').toJSON()});\n            filters.push({id:'gameDateLast', property: 'gameDateLast', value: weekRecord.get('enddate').toJSON()});\n        }\n        \n        statsStore.filter(filters);\n*/"],[1,"// call the changedate methods which will also refresh the player store"],[0,"\n   "]],"start1":17951,"start2":17951,"length1":601,"length2":79},{"diffs":[[0,"e);\n"],[-1,"            //    changeDate: function(datefield, newValue, oldValue, options) {\n\n"],[0,"    "]],"start1":18155,"start2":18155,"length1":90,"length2":8}]],"length":23976,"saved":false}
{"ts":1376573618604,"patch":[[{"diffs":[[0,"dateFilter.value"],[1,", -1"],[0,");\n        } els"]],"start1":18140,"start2":18140,"length1":32,"length2":36},{"diffs":[[0,"Filter.value"],[1,", -1"],[0,");\n        }"]],"start1":18275,"start2":18275,"length1":24,"length2":28}]],"length":23984,"saved":false}
{"ts":1376573746088,"patch":[[{"diffs":[[0,"dateFilter.value"],[-1,", -1"],[0,");\n        } els"]],"start1":18140,"start2":18140,"length1":36,"length2":32}]],"length":23980,"saved":false}
{"ts":1376573750664,"patch":[[{"diffs":[[0,"alue"],[-1,", -1"],[0,");\n "]],"start1":18279,"start2":18279,"length1":12,"length2":8}]],"length":23976,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376651750025,"patch":[[{"diffs":[[0,"te',"],[-1," sport: DFST.AppSettings.sport,"],[0," pro"]],"start1":5238,"start2":5238,"length1":39,"length2":8},{"diffs":[[0,"ore."],[-1,"gameDate = new Date();\n        var dateFilter = this.getDateFilter();\n.addAll(      var weekFilter = this.getWeekFilter();\n        if (dateFilter) {\n            gameDate = dateFilter.value;\n        } else {\n            weekRecord =  weekFilter.findRecordByValue(weekFilter.value);\n        }/*\n )   statsStore.filter([\n            {id:'gameDate', property: 'gameDate', value: weekRecord.get('enddate').toJSON()},"],[1,"filters.addAll(["],[0,"\n   "]],"start1":17658,"start2":17658,"length1":419,"length2":24},{"diffs":[[0,"lue("],[-1,"weekRecord.get('startdate').toJSON()}"],[0,")}\n "]],"start1":17927,"start2":17927,"length1":45,"length2":8},{"diffs":[[0,"        "],[-1,"  "],[-1,"  "],[0,"]);\n"],[1,"\n"],[0,"    "],[-1,"},\n"],[0,"    // c"]],"start1":17934,"start2":17934,"length1":31,"length2":25},{"diffs":[[0,"ore\n"],[-1,"    onGamesChanged: function(store, records, wasSuccessful, options) {\n        if (records === null) return;\n*/\n"],[0,"    "]],"start1":18023,"start2":18023,"length1":120,"length2":8},{"diffs":[[0,"e);\n"],[-1,"            //    changeDate: function(datefield, newValue, oldValue, options) {\n\n"],[0,"    "]],"start1":18155,"start2":18155,"length1":90,"length2":8},{"diffs":[[0,"alue);\n        }"],[-1,""],[0,""],[1,"\n    },\n    \n    onGamesChanged: function(store, records, wasSuccessful, options) {\n        if (records === null) return;"],[0,"\n        // Chan"]],"start1":18279,"start2":18279,"length1":32,"length2":153},{"diffs":[[0,"me, 'g:i"],[-1," a"],[0,"');\n    "]],"start1":19988,"start2":19988,"length1":18,"length2":16}]],"length":23974,"saved":false}
{"ts":1376651765665,"patch":[[{"diffs":[[0,"me, 'g:i"],[1," D"],[0,"');\n    "]],"start1":19988,"start2":19988,"length1":16,"length2":18}]],"length":23976,"saved":false}
{"ts":1376651828475,"patch":[[{"diffs":[[0,", tzo);\n"],[1,"            if (DFST.AppSettings.sport === \"nfl\") {\n                \n            } else {\n    "],[0,"        "]],"start1":19935,"start2":19935,"length1":16,"length2":110},{"diffs":[[0,"g:i "],[-1,"D"],[1,"a"],[0,"');\n"],[1,"            }\n"],[0,"    "]],"start1":20087,"start2":20087,"length1":13,"length2":27}]],"length":24084,"saved":false}
{"ts":1376651902015,"patch":[[{"diffs":[[0,"                "],[1,"gameTime = Ext.Date.format(gameTime, 'g:i') +\n                    Ext.Date.format(gameTime, 'D').substring(0, 2);"],[0,"\n            } e"]],"start1":19995,"start2":19995,"length1":32,"length2":145}]],"length":24197,"saved":false}
{"ts":1376651960838,"patch":[[{"diffs":[[0,"me, 'g:i"],[1," "],[0,"') +\n   "]],"start1":20044,"start2":20044,"length1":16,"length2":17}]],"length":24198,"saved":false}
{"ts":1376651972389,"patch":[[{"diffs":[[0,"alin + '"],[-1," "],[0,"@' + thi"]],"start1":20399,"start2":20399,"length1":17,"length2":16}]],"length":24197,"saved":false}
{"ts":1376652069931,"patch":[[{"diffs":[[0," + '"],[-1,"@"],[1," @ "],[0,"' + "]],"start1":20403,"start2":20403,"length1":9,"length2":11}]],"length":24199,"saved":false}
{"ts":1376652094984,"patch":[[{"diffs":[[0,"e, 'g:i "],[1,"("],[0,"') +\n   "]],"start1":20045,"start2":20045,"length1":16,"length2":17},{"diffs":[[0,"Time, 'D"],[1,")"],[0,"').subst"]],"start1":20099,"start2":20099,"length1":16,"length2":17}]],"length":24201,"saved":false}
{"ts":1376652098021,"patch":[[{"diffs":[[0,"eTime, '"],[1,"("],[0,"D)').sub"]],"start1":20098,"start2":20098,"length1":16,"length2":17}]],"length":24202,"saved":false}
{"ts":1376652103170,"patch":[[{"diffs":[[0,"e, 'g:i "],[-1,"("],[0,"') +\n   "]],"start1":20045,"start2":20045,"length1":17,"length2":16}]],"length":24201,"saved":false}
{"ts":1376652230047,"patch":[[{"diffs":[[0,"+ ' ' + "],[-1,"gameTime"],[1,"'<span>' + gameTime + '</span>'"],[0,";\n      "]],"start1":20475,"start2":20475,"length1":24,"length2":47}]],"length":24224,"saved":false}
{"ts":1376652357881,"patch":[[{"diffs":[[0,"' + "],[-1,"'<span>' + gameTime + '</span>'"],[1,"gameTime"],[0,";\n  "]],"start1":20479,"start2":20479,"length1":39,"length2":16}]],"length":24201,"saved":false}
{"ts":1376652455746,"patch":[[{"diffs":[[0,"ime, '(D"],[-1,")"],[0,"').subst"]],"start1":20099,"start2":20099,"length1":17,"length2":16},{"diffs":[[0,"ng(0, 2)"],[1," + ')'"],[0,";\n      "]],"start1":20117,"start2":20117,"length1":16,"length2":22}]],"length":24206,"saved":false}
{"ts":1376652465803,"patch":[[{"diffs":[[0,"e, 'g:i "],[1,"("],[0,"') +\n   "]],"start1":20045,"start2":20045,"length1":16,"length2":17},{"diffs":[[0,"eTime, '"],[-1,"("],[0,"D').subs"]],"start1":20098,"start2":20098,"length1":17,"length2":16}]],"length":24206,"saved":false}
{"ts":1376652607730,"patch":[[{"diffs":[[0,"e, 'g:i "],[-1,"("],[0,"') +\n   "]],"start1":20045,"start2":20045,"length1":17,"length2":16},{"diffs":[[0,", 2)"],[-1," + ')'"],[0,";\n  "]],"start1":20120,"start2":20120,"length1":14,"length2":8}]],"length":24199,"saved":false}
{"ts":1376655251469,"patch":[[{"diffs":[[0,"tsStore.filter(["],[1,"\n            "],[0,"{id:"],[-1," "],[0,"'gameDate', prop"]],"start1":5807,"start2":5807,"length1":37,"length2":49},{"diffs":[[0,"eStart.toJSON()}"],[1,",\n            {id:'gameDateLast', property: 'gameDateLast', value: gameDateEnd.toJSON()}\n        "],[0,"]);\n        var "]],"start1":5888,"start2":5888,"length1":32,"length2":129}]],"length":24308,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377962313325,"patch":[[{"diffs":[[0,"1; //dk\n"],[1,"            if (siteId == 3) dfsGameId = 3; //ds\n"],[0,"        "]],"start1":14101,"start2":14101,"length1":16,"length2":65}]],"length":24357,"saved":false}
